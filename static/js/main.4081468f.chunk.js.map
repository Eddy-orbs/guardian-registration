{"version":3,"sources":["serviceWorker.ts","store/CryptoWalletConnectionStore.ts","utils/utils.ts","constants/ethereumErrorCodes.ts","store/OrbsAccountStore.ts","configs.ts","theme/Theme.tsx","store/storesInitialization.ts","AppWrapper.tsx","services/Services.ts","components/InTextLink.tsx","components/ethereumConnection/LegalTicker.tsx","components/texts/boldText.tsx","components/detailsList/Detailslist.tsx","constants/explainingTexts.tsx","components/ethereumConnection/CountryLegalTicker.tsx","components/shared/ActionButton/ActionButton.tsx","components/ethereumConnection/NoEthereumProviderSection.tsx","components/structure/ContentContainer.tsx","components/structure/Header.tsx","components/structure/Page.tsx","pages/NoEthereumProviderPage.tsx","store/storeHooks.ts","components/structure/ContentFitting.tsx","pages/error/ErrorLoadingPage.tsx","pages/loading/LoadingPage.tsx","components/forms/FormHelperListTexts.tsx","pages/GuardiandRegisterOrEdit/forms/inoputValidators.ts","pages/GuardiandRegisterOrEdit/forms/GuradiansDetailsForm.tsx","components/detailsList/DetailsListContainer.tsx","pages/GuardianFormDetailsList.tsx","pages/GuardiandRegisterOrEdit/guardianRegister/RegisterGuardianSection.tsx","services/servicesHooks.ts","pages/GuardiandRegisterOrEdit/guardianRegister/GuardianRegistrationPage.tsx","pages/GuardiandRegisterOrEdit/forms/GuardiansDetailsUrlForm.tsx","pages/GuardiandRegisterOrEdit/guardianEdit/sections/EditDelegatorsCertificateSection.tsx","pages/GuardiandRegisterOrEdit/guardianEdit/GuardianDetails.tsx","pages/GuardiandRegisterOrEdit/forms/UnregisterForm.tsx","components/shared/modals/ActionConfirmationModal.tsx","pages/GuardiandRegisterOrEdit/forms/DelegatorsShareForm.tsx","components/forms/FormWrapper.tsx","pages/GuardiandRegisterOrEdit/guardianEdit/GuardiansEditingPage.tsx","pages/GuardiandRegisterOrEdit/GuardianRegisterOrEditPage.tsx","index.tsx","components/structure/Footer.tsx","App.tsx"],"names":["Boolean","window","location","hostname","match","CryptoWalletConnectionStore","action","cryptoWalletConnectionService","addressCheckingInterval","undefined","reactionToWalletConnection","this","hasEthereumProvider","hasEventsSupport","reaction","isConnectedToWallet","isConnected","a","readInformationFromConnectedWallet","fireImmediately","onMainAddressChange","address","setMainAddress","readMainAddress","then","setInterval","requestConnectionPermission","permissionGranted","setWalletConnectionRequestApproved","walletConnectionRequestApproved","walletAddress","requestApproved","mainAddress","didUserApproveDappInThePast","observable","computed","ipvHexToV4","ipHex","slice","map","ipHexPart","parseInt","join","JSON_RPC_ERROR_CODES","userRejectedRequest","unauthorized","unsupportedMethod","emptyGuardianInfo","orbsAddr","ip","website","name","emptyGuardianContractInteractionTimes","registrationTime","lastUpdateTime","OrbsAccountStore","cryptoWalletIntegrationStore","guardiansService","stakingRewardsService","delegationsService","addressChangeReaction","setDoneLoading","reactToConnectedAddressChanged","promievent","resetTxIndicators","setTxPending","console","log","res","code","setTxCanceled","guardianRegistrationPayload","promiEvent","registerGuardian","handlePromievent","txRes","manuallyReadAccountData","setTxHadError","error","guardianUpdatePayload","updateGuardianInfo","unregisterGuardian","unDelegate","delegatorsCutPercentage","setDelegatorsCutPercentage","guardianDetailsPageURl","setGuardianDetailsPageUrl","currentAddress","setDefaultAccountAddress","refreshAccountListeners","readDataForAccount","failLoadingProcess","accountAddress","setFromAccount","readAndSetIsGuardian","isGuardian","readAndSetGuardianInfo","catch","e","readAndSetDelegatorsCut","readAndSetGuardianRewardsSettings","readAndSetDetailsPageUrl","readAndSetSelectedGuardianAddress","readAndSetRewardsContractSettings","readAndSetEthereumBalance","isRegisteredGuardian","setIsGuardian","readGuardianInfo","guardianInfoResponse","guardianInfo","guardianRegistrationTimeInfo","setGuardianInfo","setGuardianContractInteractionTimes","readDelegatorsCutPercentage","delegatorsCut","readGuardianDetailsPageUrl","detailsPageUrl","setDetailsPageURL","readContractRewardsSettings","rewardsContractSettings","setRewardsContractSettings","readGuardianRewardsSettings","guardianRewardsSettings","setGuardianRewardsSettings","readEthereumBalance","ethBalance","setEthereumBalance","readDelegation","selectedGuardianAddress","setSelectedGuardianAddress","cancelAllCurrentSubscriptions","setErrorLoading","doneLoading","errorLoading","txPending","txCanceled","txHadError","guardianContractInteractionTimes","ethereumBalance","isUsingDefaultRewardsPercent","toLowerCase","maxDelegatorsStakingRewardsPercent","defaultDelegatorsStakingRewardsPercent","delegatorsStakingRewardsPercent","INFURA_KEY","process","REACT_APP_ETHEREUM_NETWORK","REACT_APP_INFURA_KEY","configs","urlBase","PUBLIC_BASE_PATH","v2contractsAddressesOverride","ETHEREUM_PROVIDER_WS","privacyPolicyUrl","termsOfUseUrl","PRIMARY_TEXT","baseTheme","responsiveFontSizes","createMuiTheme","palette","primary","main","secondary","text","disabled","background","default","paper","active","disabledBackground","hover","selected","divider","typography","overrides","MuiPaper","root","MuiTypography","colorPrimary","MuiLink","configure","enforceActions","services","ethereumProvider","web3","Web3","providers","WebsocketProvider","cryptoWalletIntegrationService","CryptoWalletConnectionService","GuardiansService","guardiansRegistration","StakingRewardsService","stakingRewards","DelegationsService","delegations","buildServices","ethereum","stores","guardiansV2Service","stakingRewardsV2Service","orbsAccountStore","getStores","AppWrapper","React","memo","props","appComponent","StylesProvider","injectFirst","ThemeProvider","theme","maxSnack","useStyles","makeStyles","link","transition","color","light","dark","linkFaded","InTextLink","classes","href","shouldfade","others","className","clsx","target","rel","LegalTicker","value","onValueChange","innerHtmlForLegalAgreement","renderToString","Typography","style","textAlign","FormControlLabel","marginTop","control","Checkbox","checked","onChange","label","dangerouslySetInnerHTML","__html","boldText","fontWeight","display","BoldText","children","container","flexDirection","alignItems","padding","textsList","listStylePosition","paddingLeft","margin","DetailsList","conceptName","details","caption","detail","variant","toString","GUARDIAN_ADDRESS_DETAILS_TEXTS","NODE_ADDRESS_DETAILS_TEXTS","CountryLegalTicker","actionButton","borderColor","backgroundColor","getContrastText","actionButtonError","actionButtonWarning","warning","ActionButton","fullWidth","errorVariant","warningVariant","rest","Button","type","noEthereumProviderSection","borderRadius","width","maxWidth","boxSizing","NoEthereumProviderSection","walletConnectionPhase","actionFunction","isMetaMaskProvider","pressedOnInstall","useState","legalTickerValue","setLegalTickerValue","countryTickerValue","setCountryTickerValue","isConnectPhase","allTickersChecked","useMemo","shouldDisplayLegalTicker","hasExtraDetailsSection","buttonIsEnabled","isInstall","titleText","subTitleText","buttonText","marginBottom","onClick","centeredContainer","height","ContentContainer","useTheme","smallOrSmaller","useMediaQuery","breakpoints","down","Container","component","disableGutters","appBar","paddingTop","paddingBottom","title","flexGrow","Header","AppBar","position","Toolbar","page","backdrop","zIndex","drawer","Page","app","minHeight","flex","backgroundRepeat","backgroundImage","backgroundAttachment","backgroundPosition","NoEthereumProviderPage","hasPressed","useBoolean","installMetaMask","useCallback","open","setTrue","id","CssBaseline","useStores","useContext","MobXProviderContext","useCryptoWalletIntegrationStore","useOrbsAccountStore","contentFitter","ContentFitting","ErrorLoadingPage","LoadingPage","helperText","FormHelperListTexts","helperTexts","header","length","index","Fragment","wordWrap","validURL","str","RegExp","test","ETHEREUM_ADDRESS_REGEX","IP_REGEX","INFO_MESSAGE_GUARDIAN_NAME","INFO_MESSAGE_WEBSITE","INFO_MESSAGE_IP","INFO_MESSAGE_NODE_ADDRESS","form","textField","GuardiansDetailsForm","guardianInitialInfo","submitInfo","actionButtonTitle","disableSubmit","messageForSubmitButton","useForm","register","handleSubmit","errors","useStateful","ipAddress","nodeAddress","errorNodeAddress","errorIPAddress","errorWebsite","nameSetValue","setValue","websiteSetValue","ipAddressSetValue","nodeAddressSetValue","useEffect","isMobile","hasError","errorText","infoTexts","message","submit","formData","onSubmit","TextField","InputLabelProps","pointerEvents","placeholder","required","inputRef","autoFocus","validate","pattern","flexWrap","justifyItems","justifyContent","DetailsListContainer","GuardianFormDetailsList","avatar","spacing","marginLeft","marginRight","emptyInitialInfo","RegisterGuardianSection","guardianAddress","errorMessage","setErrorMessage","checkBalanceBeforeRegistration","Avatar","textOverflow","overflow","useServices","Error","useCryptoWalletConnectionService","GuardianRegistrationPage","enqueueSnackbar","useSnackbar","unDelegateCurrentDelegation","isDelegatingToOtherAccount","Box","Paper","p","m","border","overflowX","textDecoration","noWrap","Backdrop","CircularProgress","GuardiansDetailsUrlForm","currentGuardianDetailsUrl","updateGuardianDetailsUrl","hasGuardianDetailsUrl","detailsRequirementsLink","REWARDS_FREQUENCY_DATA_MESSAGE","errorGuardianDetailsUrl","guardianDetailsUrl","formGuardianDetailsUrl","submitUpdate","setFormGuardianDetailsUrl","startsWith","DETAILS_REQUIREMENTS_LINK","titleHighlight","titleFade","valueHighlight","valueFade","GuardianDetails","delegatorsShare","guardianCertificationUrl","highlightInfo","highlightDelegatorsShare","highlightCertificateUrl","shouldFadeOthers","delegatorsShareUsingDefaultMessage","isUsingDefaultValue","guardianCertificateUrlDataText","elevation","TitleValuePair","shouldHighlight","defaultValue","openUnregisterMenuButton","closeUnregisterMenuButton","unregisterButton","UnregisterForm","submitUnregister","dialogPaper","boxShadow","minWidth","button","ActionConfirmationModal","onAccept","onCancel","contentText","instructionText","acceptText","cancelText","Dialog","fullScreen","onClose","aria-labelledby","DialogTitle","DialogContent","DialogContentText","DialogActions","DelegatorsShareForm","currentDelegatorsCut","updateDelegatorsCut","delegatorsCutDefaultValue","delegatorsCutMaxValue","REWARDS_FREQUENCY_MESSAGE","useNumber","Math","min","upperLimit","errorDelegatorsCut","parseFloat","setDelegCut","inputProps","step","max","InputProps","startAdornment","formWrapper","FormWrapper","tab","opacity","tabPanel","TABS_IDS","GuardianEditingPage","observer","showModal","setShowModal","onDialogAccept","setOnDialogAccept","content","instruction","dialogTexts","setDialogTexts","updateGuardianDetails","onCancelMessage","updateDelegatorsShare","delegatorsSharePercentage","toLocaleString","writeGuardianDelegatorsCutPercentage","updateGuardianDetailsPage","guardianDetailsPageUrl","writeGuardianDetailsPageURL","tabValue","setTabValue","guardianDetails","isUsingDefaultDelegatorsCutPercentage","maxValue","hasGuardianDetailsURL","showDetails","Tabs","scrollButtons","event","indicatorColor","textColor","aria-label","TabIndicatorProps","Tab","TabPanel","dir","direction","preventDuplicate","other","AppComponent","GuardiansRegisterOrEditPage","footerContainer","bottom","bottomAppBar","top","Color","fade","paddingRight","appVersion","Footer","version","paddingInlineEnd","justifySelf","App","appContent","path","askToConnect","isMetamaskInstalled","autoHideDuration","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4081468f.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { action, computed, observable, reaction } from \"mobx\";\nimport { IReactionDisposer } from \"mobx/lib/core/reaction\";\nimport { ICryptoWalletConnectionService } from \"@orbs-network/contracts-js\";\n\nexport class CryptoWalletConnectionStore {\n  @observable private walletConnectionRequestApproved: boolean = false;\n\n  @observable public hasEthereumProvider: boolean;\n  @observable public hasEventsSupport: boolean;\n\n  @observable public mainAddress: string = \"\";\n\n  private addressCheckingInterval?: NodeJS.Timeout = undefined;\n  reactionToWalletConnection: IReactionDisposer;\n\n  constructor(\n    private cryptoWalletConnectionService: ICryptoWalletConnectionService\n  ) {\n    this.hasEthereumProvider =\n      cryptoWalletConnectionService.hasEthereumProvider;\n    this.hasEventsSupport = cryptoWalletConnectionService.hasEventsSupport;\n\n    this.reactionToWalletConnection = reaction(\n      () => this.isConnectedToWallet,\n      async (isConnected) => {\n        if (isConnected) {\n          this.readInformationFromConnectedWallet();\n        }\n      },\n      {\n        fireImmediately: true,\n      }\n    );\n\n    if (this.hasEthereumProvider) {\n      // We will only detect address change if the Ethereum provider can support it\n      if (this.cryptoWalletConnectionService.hasEventsSupport) {\n        this.cryptoWalletConnectionService.onMainAddressChange((address) =>\n          this.setMainAddress(address)\n        );\n      } else {\n        // Else, we will read it one time + set an interval\n        this.cryptoWalletConnectionService\n          .readMainAddress()\n          .then((address) => this.setMainAddress(address));\n\n        this.addressCheckingInterval = setInterval(\n          () =>\n            this.cryptoWalletConnectionService\n              .readMainAddress()\n              .then((address) => this.setMainAddress(address)),\n          1000\n        );\n      }\n    }\n  }\n\n  @computed\n  public get isConnectedToWallet(): boolean {\n    return (\n      this.hasEthereumProvider &&\n      (this.cryptoWalletConnectionService.didUserApproveDappInThePast ||\n        this.walletConnectionRequestApproved)\n    );\n  }\n\n  public async askToConnect(): Promise<boolean> {\n    if (this.isConnectedToWallet) {\n      return true;\n    } else {\n      const permissionGranted = await this.cryptoWalletConnectionService.requestConnectionPermission();\n      this.setWalletConnectionRequestApproved(permissionGranted);\n\n      return this.walletConnectionRequestApproved;\n    }\n  }\n\n  private async readInformationFromConnectedWallet() {\n    const walletAddress = await this.cryptoWalletConnectionService.readMainAddress();\n\n    this.setMainAddress(walletAddress);\n  }\n\n  @action(\"setWalletConnectionRequestApproved\")\n  private setWalletConnectionRequestApproved(requestApproved: boolean) {\n    this.walletConnectionRequestApproved = requestApproved;\n  }\n\n  @action(\"setMainAddress\")\n  private setMainAddress(mainAddress: string) {\n    this.mainAddress = mainAddress;\n  }\n}\n","export const ipvHexToV4 = (ipHex: string) => {\n  const withoutPrefix = ipHex.slice(2);\n\n  const part1 = ipHex.slice(2, 4);\n  const part2 = ipHex.slice(4, 6);\n  const part3 = ipHex.slice(6, 8);\n  const part4 = ipHex.slice(8);\n  const parts = [part1, part2, part3, part4];\n\n  const toV4 = parts.map((ipHexPart) => parseInt(ipHexPart, 16)).join(\".\");\n\n  return toV4;\n};\n\nexport const ipv4ToHex = (ipv4: string) => {\n  const manualToHex = ipv4\n    .split(\".\")\n    .map((ipSection) => parseInt(ipSection).toString(16).padStart(2, \"0\"))\n    .join(\"\");\n\n  // Add the prefix\n  const ipAsHex = `0x${manualToHex}`;\n\n  return ipAsHex;\n};\n","// DEV_NOTE : Taken from typeless library 'eth-json-rpc-errors';\nexport const JSON_RPC_ERROR_CODES = {\n  rpc: {\n    invalidInput: -32000,\n    resourceNotFound: -32001,\n    resourceUnavailable: -32002,\n    transactionRejected: -32003,\n    methodNotSupported: -32004,\n    parse: -32700,\n    invalidRequest: -32600,\n    methodNotFound: -32601,\n    invalidParams: -32602,\n    internal: -32603,\n  },\n  provider: {\n    userRejectedRequest: 4001,\n    unauthorized: 4100,\n    unsupportedMethod: 4200,\n  },\n};\n","import {\n  action,\n  computed,\n  IReactionDisposer,\n  observable,\n  reaction,\n} from \"mobx\";\nimport { CryptoWalletConnectionStore } from \"./CryptoWalletConnectionStore\";\nimport { PromiEvent, TransactionReceipt } from \"web3-core\";\nimport { ipvHexToV4 } from \"../utils/utils\";\nimport { JSON_RPC_ERROR_CODES } from \"../constants/ethereumErrorCodes\";\nimport {\n  ICryptoWalletConnectionService,\n  IGuardiansService,\n  IStakingRewardsService,\n  TGuardianRewardsSettings,\n  TRewardsContractSettings,\n  TGuardianRegistrationPayload,\n  TGuardianUpdatePayload,\n  IDelegationsService,\n} from \"@orbs-network/contracts-js\";\n\nexport type TGuardianInfo = {\n  ip: string;\n  orbsAddr: string;\n  name: string;\n  website: string;\n  // contact: string;\n};\n\nexport type TGuardianContractInteractionTimes = {\n  /**\n   * Unix timestamp\n   */\n  registrationTime: number;\n  /**\n   * Unix timestamp\n   */\n  lastUpdateTime: number;\n};\n\nconst emptyGuardianInfo: TGuardianInfo = {\n  orbsAddr: \"\",\n  // contact: \"\",\n  ip: \"\",\n  website: \"\",\n  name: \"\",\n};\n\nconst emptyGuardianContractInteractionTimes: TGuardianContractInteractionTimes = {\n  registrationTime: 0,\n  lastUpdateTime: 0,\n};\n\nconst ONE_HOUR_IN_SECONDS = 60 * 60;\n\nexport class OrbsAccountStore {\n  @observable public doneLoading = false;\n  @observable public errorLoading = false;\n  @observable public txPending = false;\n  @observable public txHadError = false;\n  @observable public txCanceled = false;\n  @observable public isGuardian = false;\n  @observable public guardianInfo: TGuardianInfo = emptyGuardianInfo;\n  @observable\n  public guardianContractInteractionTimes: TGuardianContractInteractionTimes = emptyGuardianContractInteractionTimes;\n\n  @observable\n  public rewardsContractSettings: TRewardsContractSettings = {\n    maxDelegatorsStakingRewardsPercent: 0,\n    defaultDelegatorsStakingRewardsPercent: 0,\n  };\n\n  @observable\n  public guardianRewardsSettings: TGuardianRewardsSettings = {\n    isUsingDefaultRewardsPercent: true,\n    delegatorsStakingRewardsPercent: 0,\n  };\n\n  @observable public selectedGuardianAddress?: string;\n\n  @observable\n  public delegatorsCutPercentage?: number;\n  @observable\n  public detailsPageUrl?: string;\n\n  @observable public ethBalance = 0;\n\n  private addressChangeReaction: IReactionDisposer;\n\n  constructor(\n    private cryptoWalletIntegrationStore: CryptoWalletConnectionStore,\n    private guardiansService: IGuardiansService,\n    private stakingRewardsService: IStakingRewardsService,\n    private delegationsService: IDelegationsService,\n    private cryptoWalletConnectionService: ICryptoWalletConnectionService\n  ) {\n    this.addressChangeReaction = reaction(\n      () => this.cryptoWalletIntegrationStore.mainAddress,\n      async (address) => {\n        this.setDoneLoading(false);\n        await this.reactToConnectedAddressChanged(address);\n        this.setDoneLoading(true);\n      },\n      {\n        fireImmediately: true,\n      }\n    );\n  }\n\n  // **** Computed values ****\n\n  @computed public get isUsingDefaultDelegatorsCutPercentage(): boolean {\n    return this.guardianRewardsSettings.isUsingDefaultRewardsPercent;\n  }\n\n  @computed public get hasGuardianDetailsURL(): boolean {\n    return !!this.detailsPageUrl;\n  }\n\n  /**\n   * Checks if the account is delegating to another account\n   */\n  @computed public get isDelegatingToOtherAccount(): boolean {\n    return (\n      this.selectedGuardianAddress !== undefined &&\n      this.selectedGuardianAddress.toLowerCase() !==\n        this.cryptoWalletIntegrationStore.mainAddress.toLowerCase()\n    );\n  }\n\n  // **** Contract interactions ****\n  private async handlePromievent(\n    promievent:\n      | PromiEvent<TransactionReceipt>\n      | Promise<PromiEvent<TransactionReceipt>>,\n    name = \"A promivent\"\n  ): Promise<TransactionReceipt | undefined> {\n    this.resetTxIndicators();\n\n    // Indicate tx is pending\n    this.setTxPending(true);\n    console.log(`Waiting for promievent of ${name}`);\n\n    try {\n      const res = await promievent;\n      console.log(`Got Results for promievent of ${name}`);\n      return res;\n    } catch (e) {\n      if (\n        (e as any).code === JSON_RPC_ERROR_CODES.provider.userRejectedRequest\n      ) {\n        this.setTxCanceled(true);\n      } else {\n        throw e;\n      }\n    } finally {\n      this.setTxPending(false);\n    }\n  }\n\n  public async registerGuardian(\n    guardianRegistrationPayload: TGuardianRegistrationPayload\n  ) {\n    try {\n      const promiEvent = this.guardiansService.registerGuardian(\n        guardianRegistrationPayload\n      );\n\n      const txRes = await this.handlePromievent(\n        promiEvent,\n        \"Register guardian\"\n      );\n\n      // After registering, lets re-read the data\n      await this.manuallyReadAccountData();\n\n      return txRes;\n    } catch (e) {\n      this.setTxHadError(true);\n      // TODO : Handle the error\n      console.error(`Failed registering guardian ${e}`);\n      throw e;\n    }\n  }\n\n  public async updateGuardianInfo(\n    guardianUpdatePayload: TGuardianUpdatePayload\n  ) {\n    try {\n      const promiEvent = this.guardiansService.updateGuardianInfo(\n        guardianUpdatePayload\n      );\n\n      const txRes = await this.handlePromievent(promiEvent, \"Update guardian\");\n\n      // After registering, lets re-read the data\n      await this.manuallyReadAccountData();\n\n      return txRes;\n    } catch (e) {\n      this.setTxHadError(true);\n      // TODO : Handle the error\n      console.error(`Failed updating guardian info ${e}`);\n      throw e;\n    }\n  }\n\n  public async unregisterGuardian() {\n    try {\n      const promiEvent = this.guardiansService.unregisterGuardian();\n\n      const txRes = await this.handlePromievent(\n        promiEvent,\n        \"Unregister guardian\"\n      );\n\n      // After registering, lets re-read the data\n      await this.manuallyReadAccountData();\n\n      return txRes;\n    } catch (e) {\n      this.setTxHadError(true);\n      // TODO : Handle the error\n      console.error(`Failed unregistering guardian ${e}`);\n      throw e;\n    }\n  }\n\n  public async unDelegateCurrentDelegation() {\n    try {\n      const promiEvent = this.delegationsService.unDelegate(\n        this.cryptoWalletIntegrationStore.mainAddress\n      );\n\n      const txRes = await this.handlePromievent(promiEvent, \"UnDelegate\");\n\n      // After registering, lets re-read the data\n      await this.manuallyReadAccountData();\n\n      return txRes;\n    } catch (e) {\n      this.setTxHadError(true);\n      // TODO : Handle the error\n      console.error(`Failed unDelegating ${e}`);\n      throw e;\n    }\n  }\n\n  public async writeGuardianDelegatorsCutPercentage(\n    delegatorsCutPercentage: number\n  ) {\n    console.log(`Writing :`, delegatorsCutPercentage);\n\n    const promiEvent = this.stakingRewardsService.setDelegatorsCutPercentage(\n      delegatorsCutPercentage\n    );\n\n    try {\n      const txRes = await this.handlePromievent(\n        promiEvent,\n        \"Set delegators cut percentage\"\n      );\n\n      // After updating, lets re-read the data\n      await this.manuallyReadAccountData();\n\n      return txRes;\n    } catch (e) {\n      // TODO : Handle the error\n      console.error(`Failed setting delegators cut percentage ${e}`);\n      throw e;\n    }\n  }\n\n  public async writeGuardianDetailsPageURL(guardianDetailsPageURl: string) {\n    console.log(`Writing :`, guardianDetailsPageURl);\n\n    const promiEvent = this.guardiansService.setGuardianDetailsPageUrl(\n      guardianDetailsPageURl\n    );\n\n    try {\n      const txRes = await this.handlePromievent(\n        promiEvent,\n        \"Set Details page URL\"\n      );\n\n      // After updating, lets re-read the data\n      await this.manuallyReadAccountData();\n\n      return txRes;\n    } catch (e) {\n      // TODO : Handle the error\n      console.error(`Failed setting Details page URL ${e}`);\n      throw e;\n    }\n  }\n\n  // **** Current address changed ****\n\n  private async reactToConnectedAddressChanged(currentAddress: string) {\n    if (currentAddress) {\n      this.setDefaultAccountAddress(currentAddress);\n\n      if (this.cryptoWalletIntegrationStore.hasEventsSupport) {\n        this.refreshAccountListeners(currentAddress);\n      }\n\n      try {\n        await this.readDataForAccount(currentAddress);\n      } catch (e) {\n        this.failLoadingProcess(e);\n        console.error(\n          \"Error in reacting to address change in Orbs Account Store\",\n          e\n        );\n      }\n    }\n  }\n\n  private setDefaultAccountAddress(accountAddress: string) {\n    this.guardiansService.setFromAccount(accountAddress);\n    this.stakingRewardsService.setFromAccount(accountAddress);\n    this.delegationsService.setFromAccount(accountAddress);\n  }\n\n  // **** Data reading and setting ****\n\n  public async manuallyReadAccountData() {\n    try {\n      await this.readDataForAccount(\n        this.cryptoWalletIntegrationStore.mainAddress\n      );\n    } catch (e) {\n      this.failLoadingProcess(e);\n      console.error(\n        \"Error in manually reading address data in Orbs Account Store\",\n        e\n      );\n    }\n  }\n\n  private async readDataForAccount(accountAddress: string) {\n    // DEV_NOTE: We wait to check if this account is a Guardian because it\n    //           Affects on whether we need to read more data or not.\n    try {\n      await this.readAndSetIsGuardian(accountAddress);\n    } catch (e) {\n      console.error(`Error read-n-set isGuardian ${e}`);\n    }\n\n    if (this.isGuardian) {\n      this.readAndSetGuardianInfo(accountAddress).catch((e) =>\n        console.error(`Error read-n-set Guardian Info ${e}`)\n      );\n\n      this.readAndSetDelegatorsCut(accountAddress).catch((e) =>\n        console.error(`Error read-n-set delegators cut percentage ${e}`)\n      );\n\n      this.readAndSetGuardianRewardsSettings(accountAddress).catch((e) =>\n        console.error(`Error read-n-set Guardian rewards settings ${e}`)\n      );\n\n      this.readAndSetDetailsPageUrl(accountAddress).catch((e) =>\n        console.error(`Error read-n-set Details page URL ${e}`)\n      );\n    }\n\n    this.readAndSetSelectedGuardianAddress(accountAddress).catch((e) =>\n      console.error(`Error read-n-set Selected Guardian address ${e}`)\n    );\n\n    // DEV_NOTE : O.L : This piece of info is not directly related to the account\n    this.readAndSetRewardsContractSettings().catch((e) =>\n      console.error(`Error read-n-set Ethereum balance ${e}`)\n    );\n\n    this.readAndSetEthereumBalance(accountAddress).catch((e) =>\n      console.error(`Error read-n-set Ethereum balance ${e}`)\n    );\n  }\n\n  private async readAndSetIsGuardian(accountAddress: string) {\n    const isGuardian = await this.guardiansService.isRegisteredGuardian(\n      accountAddress\n    );\n    this.setIsGuardian(isGuardian);\n  }\n\n  private async readAndSetGuardianInfo(accountAddress: string) {\n    this.guardiansService\n      .readGuardianInfo(accountAddress)\n      .then((guardianInfoResponse) => {\n        const {\n          name,\n          website,\n          orbsAddr,\n          ip,\n          // contact,\n          registrationTime,\n          lastUpdateTime,\n        } = guardianInfoResponse;\n\n        // DEV_NOTE : We update two different observables, one for the actual data, and the other for\n        //            the creation and editing time.\n        const guardianInfo: TGuardianInfo = {\n          name,\n          website,\n          ip: ipvHexToV4(ip),\n          // contact,\n          orbsAddr,\n        };\n\n        const guardianRegistrationTimeInfo: TGuardianContractInteractionTimes = {\n          registrationTime,\n          lastUpdateTime,\n        };\n\n        this.setGuardianInfo(guardianInfo);\n        this.setGuardianContractInteractionTimes(guardianRegistrationTimeInfo);\n      });\n  }\n\n  private async readAndSetDelegatorsCut(accountAddress: string) {\n    const delegatorsCut = await this.stakingRewardsService.readDelegatorsCutPercentage(\n      accountAddress\n    );\n\n    console.log(\"Setting delegtors cut\", delegatorsCut);\n    this.setDelegatorsCutPercentage(delegatorsCut);\n  }\n\n  private async readAndSetDetailsPageUrl(accountAddress: string) {\n    const detailsPageUrl = await this.guardiansService.readGuardianDetailsPageUrl(\n      accountAddress\n    );\n\n    this.setDetailsPageURL(detailsPageUrl || undefined);\n  }\n\n  private async readAndSetRewardsContractSettings() {\n    const rewardsContractSettings = await this.stakingRewardsService.readContractRewardsSettings();\n\n    this.setRewardsContractSettings(rewardsContractSettings);\n  }\n\n  private async readAndSetGuardianRewardsSettings(accountAddress: string) {\n    const guardianRewardsSettings = await this.stakingRewardsService.readGuardianRewardsSettings(\n      accountAddress\n    );\n\n    this.setGuardianRewardsSettings(guardianRewardsSettings);\n  }\n\n  private async readAndSetEthereumBalance(accountAddress: string) {\n    const ethBalance = await this.cryptoWalletConnectionService.readEthereumBalance(\n      accountAddress\n    );\n\n    this.setEthereumBalance(ethBalance);\n  }\n\n  private async readAndSetSelectedGuardianAddress(accountAddress: string) {\n    const selectedGuardianAddress = await this.delegationsService.readDelegation(\n      accountAddress\n    );\n\n    this.setSelectedGuardianAddress(selectedGuardianAddress);\n  }\n\n  // ****  Subscriptions ****\n\n  private async refreshAccountListeners(accountAddress: string) {\n    this.cancelAllCurrentSubscriptions();\n  }\n\n  private cancelAllCurrentSubscriptions() {}\n\n  // ****  Complex setters ****\n  private failLoadingProcess(error: Error) {\n    this.setErrorLoading(true);\n    this.setDoneLoading(true);\n  }\n\n  private resetTxIndicators() {\n    this.setTxPending(false);\n    this.setTxHadError(false);\n    this.setTxCanceled(false);\n  }\n\n  // ****  Observables setter actions ****\n  @action(\"setDoneLoading\")\n  private setDoneLoading(doneLoading: boolean) {\n    this.doneLoading = doneLoading;\n  }\n\n  @action(\"setErrorLoading\")\n  private setErrorLoading(errorLoading: boolean) {\n    this.errorLoading = errorLoading;\n  }\n\n  @action(\"setTxPending\")\n  private setTxPending(txPending: boolean) {\n    this.txPending = txPending;\n  }\n\n  @action(\"setTxCanceled\")\n  private setTxCanceled(txCanceled: boolean) {\n    this.txCanceled = txCanceled;\n  }\n\n  @action(\"setTxHadError\")\n  private setTxHadError(txHadError: boolean) {\n    this.txHadError = txHadError;\n  }\n\n  @action(\"setIsGuardian\")\n  private setIsGuardian(isGuardian: boolean) {\n    this.isGuardian = isGuardian;\n  }\n\n  @action(\"setGuardianInfo\")\n  private setGuardianInfo(guardianInfo: TGuardianInfo) {\n    this.guardianInfo = guardianInfo;\n  }\n\n  @action(\"setGuardianRegistrationTimes\")\n  private setGuardianContractInteractionTimes(\n    guardianContractInteractionTimes: TGuardianContractInteractionTimes\n  ) {\n    this.guardianContractInteractionTimes = guardianContractInteractionTimes;\n  }\n\n  @action(\"setRewardsContractSettings\")\n  private setRewardsContractSettings(\n    rewardsContractSettings: TRewardsContractSettings\n  ) {\n    this.rewardsContractSettings = rewardsContractSettings;\n  }\n\n  @action(\"setGuardianRewardsSettings\")\n  private setGuardianRewardsSettings(\n    guardianRewardsSettings: TGuardianRewardsSettings\n  ) {\n    this.guardianRewardsSettings = guardianRewardsSettings;\n  }\n\n  @action(\"setDelegatorsCutPercentage\")\n  private setDelegatorsCutPercentage(delegatorsCutPercentage: number) {\n    this.delegatorsCutPercentage = delegatorsCutPercentage;\n  }\n\n  @action(\"setDetailsPageURL\")\n  private setDetailsPageURL(detailsPageUrl?: string) {\n    this.detailsPageUrl = detailsPageUrl;\n  }\n\n  @action(\"setEthereumBalance\")\n  private setEthereumBalance(ethereumBalance: number) {\n    this.ethBalance = ethereumBalance;\n  }\n\n  @action(\"setSelectedGuardianAddress\")\n  private setSelectedGuardianAddress(selectedGuardianAddress: string) {\n    this.selectedGuardianAddress = selectedGuardianAddress;\n  }\n}\n","/**\n * Copyright 2019 the prism authors\n * This file is part of the prism library in the Orbs project.\n *\n * This source code is licensed under the MIT license found in the LICENSE file in the root directory of this source tree.\n * The above notice should be included in all copies or substantial portions of the software.\n */\n\ntype TSupportedNets = \"local\" | \"ropsten\" | \"mainnet\";\n// @ts-ignore\nconst ethereumNetwork: TSupportedNets = process.env.REACT_APP_ETHEREUM_NETWORK;\n\nconst INFURA_KEY = process.env.REACT_APP_INFURA_KEY;\nexport const IS_DEV = process.env.NODE_ENV !== \"production\";\nconst SHOULD_OVERRIDE_ADDRESS = IS_DEV || ethereumNetwork === \"ropsten\";\n\n////////////// CONFIG VARIABLES ///////////////\ninterface IConfig {\n  urlBase: string;\n  v2contractsAddressesOverride: Partial<{\n    guardiansRegistration: string;\n    stakingRewards: string;\n    delegations: string;\n  }>;\n  ETHEREUM_PROVIDER_WS: string;\n\n  termsOfUseUrl: string;\n  privacyPolicyUrl: string;\n}\n\nconst configs: IConfig = {\n  urlBase: process.env.PUBLIC_BASE_PATH || \"\",\n  v2contractsAddressesOverride: {},\n  ETHEREUM_PROVIDER_WS: `wss://mainnet.infura.io/ws/v3/${INFURA_KEY}`,\n\n  privacyPolicyUrl: \"https://www.orbs.com/guardian-portal-privacy-policy/\",\n  termsOfUseUrl: \"https://www.orbs.com/guardian-portal-terms-of-use/\",\n};\n\n// Webpack will remove this section on production build //\nif (process.env.NODE_ENV !== \"production\") {\n  // if (ethereumNetwork === \"local\") {\n  const addresses = require(\"./local/addresses.json\");\n\n  configs.v2contractsAddressesOverride.guardiansRegistration =\n    addresses.guardiansRegistration;\n  configs.v2contractsAddressesOverride.stakingRewards =\n    addresses.stakingRewards;\n  configs.v2contractsAddressesOverride.delegations = addresses.delegations;\n  // }\n}\n\nexport default configs;\n","import { blue } from \"@material-ui/core/colors\";\nimport responsiveFontSizes from \"@material-ui/core/styles/responsiveFontSizes\";\nimport createMuiTheme from \"@material-ui/core/styles/createMuiTheme\";\n\nconst COLOR1 = \"#0D0D0D\"; // dark gray\nconst COLOR2 = \"#6ec6d8\"; // bluish\nconst COLOR3 = \"#03FCF5\"; // bright bluish- Tetra\n\n// const PRIMARY_TEXT = '#dbdbdb';\nconst PRIMARY_TEXT = \"#dbdbdb\";\nconst SECONDARY_TEXT = \"#d0d0d0\";\n// const SECONDARY_TEXT = \"#7B7B7B\";\n\n// DEV_NOTE : Most palette colors taken from https://material-ui.com/customization/palette/#dark-mode\n\nexport const HEADER_HEIGHT_REM = 5;\n\nexport const baseTheme = responsiveFontSizes(\n  createMuiTheme({\n    palette: {\n      // TODO : Adjust all styles after structure is done\n      // type: \"dark\",\n      primary: { main: \"#09142c\" },\n      secondary: {\n        main: \"#74f6fd\",\n      },\n      text: {\n        primary: PRIMARY_TEXT,\n        secondary: \"rgba(255, 255, 255, 0.7)\",\n        disabled: \"rgba(255, 255, 255, 0.5)\",\n        // secondary: SECONDARY_TEXT,\n      },\n      background: {\n        // DEV_NOTE : This sets the app background color\n        default: \"#16317d\",\n        // paper: \"rgba(0, 31, 107, 0.6)\",\n        paper: \"#09142c\",\n      },\n      action: {\n        active: PRIMARY_TEXT,\n        disabled: \"rgba(255, 255, 255, 0.3)\",\n        disabledBackground: \"rgba(255, 255, 255, 0.12)\",\n        hover: \"rgba(255, 255, 255, 0.08)\",\n        selected: \"rgba(255, 255, 255, 0.16)\",\n      },\n      divider: \"rgba(255, 255, 255, 0.12)\",\n    },\n    typography: {\n      // fontFamily: 'Montserrat',\n    },\n    overrides: {\n      MuiPaper: {\n        root: {\n          // backgroundColor: COLOR1,\n        },\n      },\n      MuiTypography: {\n        colorPrimary: {\n          // color: PRIMARY_TEXT,\n        },\n      },\n      MuiLink: {\n        root: {\n          // color: blue[500],\n        },\n      },\n    },\n  })\n);\n\nexport const AppStyles = {};\n","import { configure } from \"mobx\";\nimport { IStores } from \"./stores\";\n\nimport { CryptoWalletConnectionStore } from \"./CryptoWalletConnectionStore\";\nimport { OrbsAccountStore } from \"./OrbsAccountStore\";\n\n// This import ensures mobx batching\nimport \"mobx-react-lite/batchingForReactDom\";\nimport {\n  ICryptoWalletConnectionService,\n  IDelegationsService,\n  IGuardiansService,\n  IStakingRewardsService,\n} from \"@orbs-network/contracts-js\";\n\n/**\n * Configures the mobx library. Should get called at App's initialization.\n */\nexport function configureMobx() {\n  configure({\n    enforceActions: \"observed\",\n  });\n}\n\n/**\n * Builds and initializes all of the stores\n */\nexport function getStores(\n  cryptoWalletConnectionService: ICryptoWalletConnectionService,\n  guardiansV2Service: IGuardiansService,\n  stakingRewardsV2Service: IStakingRewardsService,\n  delegationsService: IDelegationsService\n): IStores {\n  // Create stores instances + Hydrate the stores\n  const cryptoWalletIntegrationStore = new CryptoWalletConnectionStore(\n    cryptoWalletConnectionService\n  );\n  const orbsAccountStore = new OrbsAccountStore(\n    cryptoWalletIntegrationStore,\n    guardiansV2Service,\n    stakingRewardsV2Service,\n    delegationsService,\n    cryptoWalletConnectionService\n  );\n\n  const stores: IStores = {\n    cryptoWalletIntegrationStore,\n    orbsAccountStore,\n  };\n\n  return stores;\n}\n","import React from \"react\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { Provider } from \"mobx-react\";\nimport { configureMobx, getStores } from \"./store/storesInitialization\";\nimport { buildServices } from \"./services/Services\";\nimport { StylesProvider, ThemeProvider } from \"@material-ui/core/styles\";\nimport { AppStyles, baseTheme } from \"./theme/Theme\";\nimport { SnackbarProvider } from \"notistack\";\n\ninterface IProps {\n  appComponent: React.ReactNode;\n}\n\nconfigureMobx();\n\nconst ethereumProvider = (window as any).ethereum;\nconst services = buildServices(ethereumProvider);\nconst stores = getStores(\n  services.cryptoWalletIntegrationService,\n  services.guardiansService,\n  services.stakingRewardsService,\n  services.delegationsService\n);\n\nexport const AppWrapper = React.memo<IProps>((props) => {\n  console.log(\"Wrapper render\");\n  const { appComponent } = props;\n  return (\n    <Router>\n      <Provider {...stores} {...services}>\n        <StylesProvider injectFirst>\n          <ThemeProvider theme={baseTheme}>\n            <SnackbarProvider maxSnack={3}>{appComponent}</SnackbarProvider>\n          </ThemeProvider>\n        </StylesProvider>\n      </Provider>\n    </Router>\n  );\n});\n","import Web3 from \"web3\";\nimport configs from \"../configs\";\nimport {\n  ICryptoWalletConnectionService,\n  CryptoWalletConnectionService,\n  IEthereumProvider,\n  IGuardiansService,\n  GuardiansService,\n  IStakingRewardsService,\n  StakingRewardsService,\n  IDelegationsService,\n  DelegationsService,\n} from \"@orbs-network/contracts-js\";\n\nexport interface IServices {\n  cryptoWalletIntegrationService: ICryptoWalletConnectionService;\n  guardiansService: IGuardiansService;\n  stakingRewardsService: IStakingRewardsService;\n  delegationsService: IDelegationsService;\n}\n\n// DEV_NOTE : For simplicity of early stage dev, we assume that we have ethereum provider, if not, we will not initialize the services.\nexport function buildServices(ethereumProvider: IEthereumProvider): IServices {\n  let web3: Web3;\n\n  if (ethereumProvider) {\n    web3 = new Web3(ethereumProvider as any);\n  } else {\n    web3 = new Web3(\n      new Web3.providers.WebsocketProvider(configs.ETHEREUM_PROVIDER_WS)\n    );\n  }\n\n  return {\n    cryptoWalletIntegrationService: new CryptoWalletConnectionService(\n      ethereumProvider\n    ),\n    guardiansService: new GuardiansService(\n      web3,\n      configs?.v2contractsAddressesOverride?.guardiansRegistration\n    ),\n    stakingRewardsService: new StakingRewardsService(\n      web3,\n      configs?.v2contractsAddressesOverride?.stakingRewards\n    ),\n    delegationsService: new DelegationsService(\n      web3,\n      configs?.v2contractsAddressesOverride?.delegations\n    ),\n  };\n}\n","import React, { DetailedHTMLProps } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport clsx from \"clsx\";\n\ninterface IProps {\n  text: string;\n  href?: string;\n  shouldfade?: boolean;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  link: {\n    transition: \"0.5s\",\n    color: theme.palette.secondary.light,\n    \"&:hover\": {\n      color: theme.palette.secondary.dark,\n    },\n  },\n  linkFaded: {\n    color: theme.palette.text.disabled,\n  },\n}));\n\nexport const InTextLink = React.memo<\n  IProps &\n    DetailedHTMLProps<\n      React.AnchorHTMLAttributes<HTMLAnchorElement>,\n      HTMLAnchorElement\n    >\n>((props) => {\n  const classes = useStyles();\n  const { text, href, shouldfade, ...others } = props;\n  return (\n    <a\n      className={clsx(classes.link, shouldfade ? classes.linkFaded : null)}\n      href={href || \"\"}\n      target={\"_blank\"}\n      rel={\"noopener noreferrer\"}\n      // style={{ display: \"inline\" }}\n      {...others}\n    >\n      {text}\n    </a>\n  );\n});\n","import React from \"react\";\nimport { Checkbox, FormControlLabel, Typography } from \"@material-ui/core\";\nimport { renderToString } from \"react-dom/server\";\nimport { ThemeProvider } from \"@material-ui/core/styles\";\nimport { baseTheme } from \"../../theme/Theme\";\nimport { InTextLink } from \"../InTextLink\";\nimport configs from \"../../configs\";\n\ninterface IProps {\n  value: boolean;\n  onValueChange: (value: boolean) => void;\n}\n\nexport const LegalTicker = React.memo<IProps>((props) => {\n  const { value, onValueChange } = props;\n\n  // DEV_NOTE : IMPORTANT: O.L : While 'rendering to string' we will lose the them if not applying it directly inside the rendered component.\n  const innerHtmlForLegalAgreement = renderToString(\n    <ThemeProvider theme={baseTheme}>\n      <Typography style={{ textAlign: \"start\" }}>\n        I agree to the{\" \"}\n        <InTextLink href={configs.termsOfUseUrl} text={\"Terms of Use\"} /> and{\" \"}\n        <InTextLink href={configs.privacyPolicyUrl} text={\"Privacy Policy\"} />\n      </Typography>\n    </ThemeProvider>\n  );\n\n  return (\n    <FormControlLabel\n      style={{\n        marginTop: \"0.5rem\",\n      }}\n      control={\n        <Checkbox\n          checked={value}\n          onChange={(e) => onValueChange(e.target.checked)}\n          name={\"legalTicker\"}\n        />\n      }\n      label={\n        <Typography\n          // onClick={(e) => e.preventDefault()}\n          dangerouslySetInnerHTML={{ __html: innerHtmlForLegalAgreement }}\n        />\n      }\n    />\n  );\n});\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\ninterface IProps {}\n\nconst useStyles = makeStyles((theme) => ({\n  boldText: {\n    fontWeight: \"bold\",\n    display: \"contents\",\n    color: theme.palette.secondary.main,\n  },\n}));\n\nexport const BoldText = React.memo<IProps>((props) => {\n  const { children } = props;\n  const classes = useStyles();\n  return <div className={classes.boldText}>{children}</div>;\n});\n","import React, { DetailedHTMLProps } from \"react\";\nimport { Typography } from \"@material-ui/core\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport { BoldText } from \"../texts/boldText\";\n\ninterface IProps {\n  conceptName: string;\n  details: React.ReactNode[];\n  caption?: boolean;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"flex-start\",\n    textAlign: \"start\",\n    padding: \"0.5em\",\n  },\n  textsList: {\n    listStylePosition: \"outside\",\n    paddingLeft: \"1.5rem\",\n\n    \"& li\": {\n      margin: \"0 0 0.2rem 0\",\n    },\n    \"& li:last-child\": {\n      margin: 0,\n    },\n  },\n}));\n\nexport const DetailsList = React.memo<\n  IProps &\n    DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement>\n>((props) => {\n  const classes = useStyles();\n  const { conceptName, details, caption, ...others } = props;\n\n  return (\n    <div className={classes.container} {...others}>\n      <Typography>\n        Your <BoldText>{conceptName}:</BoldText>\n      </Typography>\n      <ul className={classes.textsList}>\n        {details.map((detail) => (\n          <li key={detail!.toString()}>\n            <Typography variant={caption ? \"caption\" : \"body2\"}>\n              {detail}\n            </Typography>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n});\n","// DEV_NOTE : We will use this constants file until moving to i18n.\n\nimport { BoldText } from \"../components/texts/boldText\";\nimport React from \"react\";\n\nexport const GUARDIAN_ADDRESS_DETAILS_TEXTS = [\n  \"Represents the Guardian in the Guardians list\",\n  \"Used by Delegators to delegate to the Guardian\",\n  \"Holds the Guardian's self-delegated stake\",\n  \"Receives the Guardians rewards\",\n];\n\nexport const NODE_ADDRESS_DETAILS_TEXTS = [\n  <>\n    Should be different from the <BoldText>Guardian address</BoldText>\n  </>,\n  \"Used by the node to sign blocks on Orbs blockchain\",\n  \"Holds ETH for node automated transactions gas\",\n  \"A minimal balance of 1 ETH is required upon registration\",\n  \"Does NOT hold your Guardian ORBS tokens\",\n];\n","import React from \"react\";\nimport { Checkbox, FormControlLabel, Typography } from \"@material-ui/core\";\nimport { renderToString } from \"react-dom/server\";\nimport { ThemeProvider } from \"@material-ui/core/styles\";\nimport { baseTheme } from \"../../theme/Theme\";\nimport { InTextLink } from \"../InTextLink\";\nimport configs from \"../../configs\";\nimport { DetailsList } from \"../detailsList/Detailslist\";\nimport { GUARDIAN_ADDRESS_DETAILS_TEXTS } from \"../../constants/explainingTexts\";\n\ninterface IProps {\n  value: boolean;\n  onValueChange: (value: boolean) => void;\n}\n\nexport const CountryLegalTicker = React.memo<IProps>((props) => {\n  const { value, onValueChange } = props;\n\n  // DEV_NOTE : IMPORTANT: O.L : While 'rendering to string' we will lose the them if not applying it directly inside the rendered component.\n  const innerHtmlForLegalAgreement = renderToString(\n    <ThemeProvider theme={baseTheme}>\n      <Typography>\n        I confirm that I am not a citizen, resident of, or otherwise located in\n        any of the following:\n      </Typography>\n    </ThemeProvider>\n  );\n\n  return (\n    <>\n      <FormControlLabel\n        style={{\n          marginTop: \"0.5rem\",\n        }}\n        control={\n          <Checkbox\n            checked={value}\n            onChange={(e) => onValueChange(e.target.checked)}\n            name={\"legalTicker\"}\n          />\n        }\n        label={\n          <Typography\n            style={{ textAlign: \"start\" }}\n            // onClick={(e) => e.preventDefault()}\n            dangerouslySetInnerHTML={{ __html: innerHtmlForLegalAgreement }}\n          />\n        }\n      />\n      <ul>\n        <li>\n          <Typography style={{ textAlign: \"start\" }}>\n            The State of Israel.\n          </Typography>\n        </li>\n        <li>\n          <Typography style={{ textAlign: \"start\" }}>\n            Any country or region subject to comprehensive sanctions, including,\n            but not limited to, the Crimean region of Ukraine, Cuba, Iran,\n            Lebanon, North Korea, Sudan and Syria.\n          </Typography>\n        </li>\n      </ul>\n    </>\n  );\n});\n","import React from \"react\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport { Button, ButtonProps } from \"@material-ui/core\";\nimport clsx from \"clsx\";\n\ninterface IProps {\n  errorVariant?: boolean;\n  warningVariant?: boolean;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  actionButton: {\n    color: theme.palette.secondary.light,\n    borderColor: theme.palette.secondary.main,\n    transition: \"background-color 0.4s linear, color 0.2s linear\",\n    \"&:hover\": {\n      backgroundColor: theme.palette.secondary.light,\n      color: theme.palette.getContrastText(theme.palette.secondary.light),\n      borderColor: theme.palette.getContrastText(theme.palette.secondary.light),\n    },\n  },\n  actionButtonError: {\n    color: theme.palette.error.light,\n    borderColor: theme.palette.error.main,\n    transition: \"background-color 0.4s linear, color 0.2s linear\",\n    \"&:hover\": {\n      backgroundColor: theme.palette.error.light,\n      color: theme.palette.getContrastText(theme.palette.error.light),\n      borderColor: theme.palette.getContrastText(theme.palette.error.light),\n    },\n  },\n\n  actionButtonWarning: {\n    color: theme.palette.warning.light,\n    borderColor: theme.palette.warning.main,\n    transition: \"background-color 0.4s linear, color 0.2s linear\",\n    \"&:hover\": {\n      backgroundColor: theme.palette.warning.light,\n      color: theme.palette.getContrastText(theme.palette.warning.light),\n      borderColor: theme.palette.getContrastText(theme.palette.warning.light),\n    },\n  },\n}));\n\nexport const ActionButton = React.memo<IProps & ButtonProps>((props) => {\n  const { children, fullWidth, errorVariant, warningVariant, ...rest } = props;\n  const classes = useStyles();\n\n  return (\n    <Button\n      className={\n        errorVariant\n          ? classes.actionButtonError\n          : warningVariant\n          ? classes.actionButtonWarning\n          : classes.actionButton\n      }\n      variant={\"outlined\"}\n      fullWidth={fullWidth === undefined ? true : fullWidth}\n      type={\"submit\"}\n      {...rest}\n    >\n      {children}\n    </Button>\n  );\n});\n","import React, { useMemo, useState } from \"react\";\nimport {\n  Button,\n  FormControl,\n  FormControlLabel,\n  Typography,\n  useTheme,\n  Checkbox,\n  MuiThemeProvider,\n} from \"@material-ui/core\";\nimport {\n  makeStyles,\n  StylesProvider,\n  ThemeProvider,\n} from \"@material-ui/core/styles\";\nimport { useBoolean } from \"react-hanger\";\nimport { renderToString } from \"react-dom/server\";\nimport { InTextLink } from \"../InTextLink\";\nimport configs from \"../../configs\";\nimport { baseTheme } from \"../../theme/Theme\";\nimport { LegalTicker } from \"./LegalTicker\";\nimport { InstallPhaseExtraDetails } from \"./InstallPhaseExtraDetails\";\nimport { DetailsList } from \"../detailsList/Detailslist\";\nimport { GUARDIAN_ADDRESS_DETAILS_TEXTS } from \"../../constants/explainingTexts\";\nimport { BoldText } from \"../texts/boldText\";\nimport { CountryLegalTicker } from \"./CountryLegalTicker\";\nimport { ActionButton } from \"../shared/ActionButton/ActionButton\";\n\ntype TWalletConnectionPhase = \"install\" | \"connect\";\n\ninterface IProps {\n  walletConnectionPhase: TWalletConnectionPhase;\n  actionFunction: () => void;\n  pressedOnInstall?: boolean;\n  isMetaMaskProvider?: boolean;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  noEthereumProviderSection: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    textAlign: \"center\",\n    // justifyContent: \"space-between\",\n    padding: \"2em\",\n    backgroundColor: \"rgba(0,0,0, 0.2)\",\n    borderRadius: \"5%\",\n    // width: \"clamp(20%, 40em, 100%)\",\n    width: \"fit-content\",\n    maxWidth: \"90%\",\n    boxSizing: \"border-box\",\n    // height: \"clamp(max(25%, 200px), 8em, 50%)\",\n  },\n}));\n\nexport const NoEthereumProviderSection = React.memo<IProps>((props) => {\n  const classes = useStyles();\n  const {\n    walletConnectionPhase,\n    actionFunction,\n    pressedOnInstall,\n    isMetaMaskProvider,\n  } = props;\n\n  const [legalTickerValue, setLegalTickerValue] = useState(false);\n  const [countryTickerValue, setCountryTickerValue] = useState(false);\n\n  const isConnectPhase = walletConnectionPhase === \"connect\";\n\n  const allTickersChecked = legalTickerValue && countryTickerValue;\n\n  // Display flags\n  const {\n    shouldDisplayLegalTicker,\n    isInstall,\n    buttonIsEnabled,\n    hasExtraDetailsSection,\n  } = useMemo(() => {\n    const shouldDisplayLegalTicker = isConnectPhase;\n\n    return {\n      shouldDisplayLegalTicker,\n      hasExtraDetailsSection: isConnectPhase,\n      buttonIsEnabled: !shouldDisplayLegalTicker || allTickersChecked,\n      isInstall: walletConnectionPhase === \"install\",\n    };\n  }, [isConnectPhase, allTickersChecked, walletConnectionPhase]);\n\n  // Display texts\n  const { titleText, buttonText, subTitleText } = useMemo(() => {\n    const ethereumProviderName = isMetaMaskProvider ? \"MetaMask\" : \"Account\";\n\n    return {\n      titleText: isInstall\n        ? \"No Ethereum provider detected\"\n        : `${ethereumProviderName} connection required`,\n      subTitleText: isInstall ? (\n        \"you should install MetaMask and refresh the page\"\n      ) : (\n        <>\n          To begin, please connect with your{\" \"}\n          <BoldText>Guardian address.</BoldText>\n        </>\n      ),\n      buttonText: walletConnectionPhase === \"install\" ? \"Install\" : \"Connect\",\n    };\n  }, [isInstall, isMetaMaskProvider, walletConnectionPhase]);\n\n  return (\n    <div className={classes.noEthereumProviderSection}>\n      <Typography style={{ marginBottom: \"0.5rem\" }} variant={\"h4\"}>\n        {titleText}\n      </Typography>\n      <Typography style={{ marginBottom: \"1rem\" }}>{subTitleText}</Typography>\n\n      {/*{hasExtraDetailsSection && <InstallPhaseExtraDetails />}*/}\n      {hasExtraDetailsSection && (\n        <DetailsList\n          conceptName={\"Guardian Address\"}\n          details={GUARDIAN_ADDRESS_DETAILS_TEXTS}\n        />\n      )}\n\n      <ActionButton\n        fullWidth={false}\n        onClick={actionFunction}\n        disabled={!buttonIsEnabled}\n      >\n        {buttonText}\n      </ActionButton>\n\n      {/* Legal Tickers */}\n      <div\n        style={{\n          width: \"min(30rem, 100%)\",\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"flex-start\",\n        }}\n      >\n        {shouldDisplayLegalTicker && (\n          <LegalTicker\n            value={legalTickerValue}\n            onValueChange={setLegalTickerValue}\n          />\n        )}\n\n        {shouldDisplayLegalTicker && (\n          <CountryLegalTicker\n            value={countryTickerValue}\n            onValueChange={setCountryTickerValue}\n          />\n        )}\n      </div>\n    </div>\n  );\n});\n","import React from \"react\";\nimport { Container, ContainerProps, useMediaQuery } from \"@material-ui/core\";\nimport useTheme from \"@material-ui/core/styles/useTheme\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  centeredContainer: {\n    // marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    height: \"100%\",\n  },\n}));\n\nexport const ContentContainer = React.memo<ContainerProps>((props) => {\n  const classes = useStyles();\n  const theme = useTheme();\n  const smallOrSmaller = useMediaQuery(theme.breakpoints.down(\"sm\"));\n\n  return (\n    <Container\n      className={classes.centeredContainer}\n      component={\"div\"}\n      disableGutters={smallOrSmaller}\n      {...props}\n    />\n  );\n});\n","import React from \"react\";\nimport { AppBar, Toolbar, Typography } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { HEADER_HEIGHT_REM } from \"../../theme/Theme\";\n\ninterface IProps {}\n\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    height: `${HEADER_HEIGHT_REM}rem`,\n    paddingTop: \"0.5rem\",\n    paddingBottom: \"0.5rem\",\n    boxSizing: \"border-box\",\n  },\n  title: {\n    flexGrow: 1,\n    textAlign: \"center\",\n    marginTop: \"1em\",\n    marginBottom: \"1em\",\n  },\n}));\n\nexport const Header = React.memo<IProps>((props) => {\n  const classes = useStyles();\n  return (\n    <AppBar className={classes.appBar} position={\"fixed\"}>\n      <Toolbar>\n        <div className={classes.title}>\n          <Typography variant=\"h5\">ORBS Guardians Portal</Typography>\n        </div>\n      </Toolbar>\n    </AppBar>\n  );\n});\n","import React, { DetailedHTMLProps } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Toolbar } from \"@material-ui/core\";\nimport { Footer } from \"./Footer\";\n\ninterface IProps {}\n\nconst useStyles = makeStyles((theme) => ({\n  page: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    // border: \"1px solid black\",\n    width: \"100%\",\n    maxWidth: \"100%\",\n    boxSizing: \"border-box\",\n    padding: \"2em\",\n    height: \"100%\",\n  },\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: \"#fff\",\n  },\n}));\n\nexport const Page = React.memo<\n  IProps &\n    DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement>\n>((props) => {\n  const { children, ...rest } = props;\n  const classes = useStyles();\n\n  return (\n    <div className={classes.page} {...rest}>\n      {/* DEV_NOTE : Adding 'toolbar' to keep with the tile */}\n      <Toolbar />\n      {children}\n    </div>\n  );\n});\n","import React, { useCallback } from \"react\";\nimport { CssBaseline, useTheme } from \"@material-ui/core\";\nimport { NoEthereumProviderSection } from \"../components/ethereumConnection/NoEthereumProviderSection\";\nimport { useBoolean } from \"react-hanger\";\nimport { ContentContainer } from \"../components/structure/ContentContainer\";\nimport { Background } from \"../components/structure/Background\";\nimport { Header } from \"../components/structure/Header\";\nimport { Page } from \"../components/structure/Page\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\ntype TWalletConnectionPhase = \"install\" | \"connect\";\n\ninterface IProps {}\n\nconst useStyles = makeStyles((theme) => ({\n  app: {\n    minHeight: `100%`,\n    flex: 1,\n    backgroundColor: \"#06142e\",\n    backgroundRepeat: \"repeat-y\",\n    backgroundImage:\n      \"url(https://www.orbs.com/wp-content/uploads/2019/02/technology-background1.png)\",\n    backgroundAttachment: \"scroll\",\n    backgroundPosition: \"top center\",\n  },\n}));\n\nexport const NoEthereumProviderPage = React.memo<IProps>((props) => {\n  const classes = useStyles();\n  const hasPressed = useBoolean(false);\n\n  const installMetaMask = useCallback(() => {\n    window.open(\"https://metamask.io/\", \"_blank\");\n    hasPressed.setTrue();\n  }, [hasPressed]);\n\n  return (\n    <>\n      <Header />\n      <main className={classes.app}>\n        <ContentContainer id={\"appContainer\"}>\n          <Page>\n            <NoEthereumProviderSection\n              walletConnectionPhase={\"install\"}\n              actionFunction={installMetaMask}\n            />\n          </Page>\n        </ContentContainer>\n        <CssBaseline />\n      </main>\n    </>\n  );\n});\n","import React from \"react\";\nimport { MobXProviderContext } from \"mobx-react\";\nimport { IStores } from \"./stores\";\nimport { CryptoWalletConnectionStore } from \"./CryptoWalletConnectionStore\";\nimport { OrbsAccountStore } from \"./OrbsAccountStore\";\n\nexport function useStores(): IStores {\n  // @ts-ignore\n  return React.useContext(MobXProviderContext);\n}\n\nexport function useCryptoWalletIntegrationStore(): CryptoWalletConnectionStore {\n  return useStores().cryptoWalletIntegrationStore;\n}\n\nexport function useOrbsAccountStore(): OrbsAccountStore {\n  return useStores().orbsAccountStore;\n}\n","import React, { DetailedHTMLProps } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\ninterface IProps {}\nconst useStyles = makeStyles((theme) => ({\n  contentFitter: {\n    height: \"100%\",\n    width: \"fit-content\",\n    maxWidth: \"100%\",\n  },\n}));\n\nexport const ContentFitting = React.memo<\n  IProps &\n    DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement>\n>((props) => {\n  const classes = useStyles();\n  const { children, ...rest } = props;\n  return (\n    <div className={classes.contentFitter} {...rest}>\n      {children}\n    </div>\n  );\n});\n","import React from \"react\";\nimport { Page } from \"../../components/structure/Page\";\nimport { ContentFitting } from \"../../components/structure/ContentFitting\";\nimport { Typography } from \"@material-ui/core\";\n\ninterface IProps {}\n\nexport const ErrorLoadingPage = React.memo<IProps>((props) => {\n  return (\n    <Page>\n      <ContentFitting>\n        <Typography>Error loading</Typography>\n      </ContentFitting>\n    </Page>\n  );\n});\n","import React from \"react\";\nimport { Page } from \"../../components/structure/Page\";\nimport { ContentFitting } from \"../../components/structure/ContentFitting\";\nimport { Typography } from \"@material-ui/core\";\n\ninterface IProps {}\n\nexport const LoadingPage = React.memo<IProps>((props) => {\n  return (\n    <Page>\n      <ContentFitting>\n        <Typography>Loading...</Typography>\n      </ContentFitting>\n    </Page>\n  );\n});\n","import React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\ninterface IProps {\n  header?: React.ReactNode;\n  helperTexts: React.ReactNode[];\n}\n\nconst useStyles = makeStyles((theme) => ({\n  helperText: {\n    color: theme.palette.secondary.main,\n  },\n  textsList: {\n    listStylePosition: \"outside\",\n    paddingLeft: \"1rem\",\n  },\n}));\n\nexport const FormHelperListTexts = React.memo<IProps>((props) => {\n  const classes = useStyles();\n  const { helperTexts, header } = props;\n  const lastIndex = helperTexts.length - 1;\n  // DEV_NOTE : O.L : Basically we are not supposed to put a 'ul' inside the helper text's 'p'.  It will\n  //                  just show warnings on dev.\n  // TODO : O.L : FUTURE : Fix this, maybe override the 'p' component to something else.\n  return (\n    <>\n      <ul className={classes.textsList}>\n        {helperTexts.map((helperText, index) => (\n          <React.Fragment key={`fragment_${helperText}`}>\n            <li\n              id={index.toString()}\n              key={helperText!.toString()}\n              className={classes.helperText}\n            >\n              <Typography\n                style={{ wordWrap: \"break-word\" }}\n                variant={\"caption\"}\n              >\n                {helperText}\n              </Typography>\n            </li>\n            {/*{index !== lastIndex && <br key={`br_${helperText}`} />}*/}\n          </React.Fragment>\n        ))}\n      </ul>\n    </>\n  );\n});\n","export function validURL(str: string) {\n  const pattern = new RegExp(\n    \"^(https?:\\\\/\\\\/)?\" + // protocol\n      \"((([a-z\\\\d]([a-z\\\\d-]*[a-z\\\\d])*)\\\\.)+[a-z]{2,}|\" + // domain name\n      \"((\\\\d{1,3}\\\\.){3}\\\\d{1,3}))\" + // OR ip (v4) address\n      \"(\\\\:\\\\d+)?(\\\\/[-a-z\\\\d%_.~+]*)*\" + // port and path\n      \"(\\\\?[;&a-z\\\\d%_.~+=-]*)?\" + // query string\n      \"(\\\\#[-a-z\\\\d_]*)?$\",\n    \"i\"\n  ); // fragment locator\n  return !!pattern.test(str);\n}\n","import React, { DetailedHTMLProps, useCallback, useEffect } from \"react\";\nimport { useStateful } from \"react-hanger\";\nimport {\n  Button,\n  TextField,\n  Tooltip,\n  Typography,\n  useMediaQuery,\n  useTheme,\n} from \"@material-ui/core\";\nimport { TGuardianInfo } from \"../../../store/OrbsAccountStore\";\nimport { useForm } from \"react-hook-form\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { FormHelperListTexts } from \"../../../components/forms/FormHelperListTexts\";\nimport { TGuardianRegistrationPayload } from \"@orbs-network/contracts-js\";\nimport { validURL } from \"./inoputValidators\";\nimport { ActionButton } from \"../../../components/shared/ActionButton/ActionButton\";\n\ninterface IProps {\n  actionButtonTitle: string;\n  guardianInitialInfo: TGuardianInfo;\n  submitInfo: (\n    guardianRegistrationPayload: TGuardianRegistrationPayload\n  ) => void;\n  disableSubmit?: boolean;\n  messageForSubmitButton?: string;\n}\n\nconst ETHEREUM_ADDRESS_REGEX = /^0x[a-fA-F0-9]{40}$/;\nconst IP_REGEX = /^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$/;\n\nconst NODE_ADDRESS_MESSAGE = \"Please use a valid address\";\nconst IP_ADDRESS_MESSAGE = \"Please use a valid IPV4 address\";\nconst WEBSITE_MESSAGE = \"Please use a valid URL\";\n\nconst INFO_MESSAGE_GUARDIAN_NAME = [\n  \"The name that the Guardian will be recognized by.\",\n];\nconst INFO_MESSAGE_WEBSITE = [\n  \"The Guardian website is used by Delegators when selecting a Guardian.\",\n];\nconst INFO_MESSAGE_IP = [\n  \"A valid IPv4 address is required to allow the Guardian’s node to connect to the network gossip topology.\",\n];\nconst INFO_MESSAGE_NODE_ADDRESS = [\n  <>\n    Should be different from the{\" \"}\n    <div style={{ display: \"contents\", fontWeight: \"bold\" }}>\n      Guardian address\n    </div>\n    .\n  </>,\n  \"Used by the Orbs node to automatically send transactions such as ReadyForCommittee.\",\n  \"Used to sign blocks on Orbs platform.\",\n  \"Should hold ETH for the automated transactions gas (A minimal balance of 1 Ether at the 'Node Address' is required in order to register as a guardian).\",\n  \"The Orbs Node address should differ from the Guardian address.\",\n];\n\nconst PLACE_HOLDER_GUARDIAN_NAME = \"e.g: Number One ORBS Guardian\";\nconst PLACE_HOLDER_WEBSITE = \"e.g: https://www.number1guardian.com\";\nconst PLACE_HOLDER_IP = \"e.g: 123.17.46.251\";\nconst PLACE_HOLDER_NODE_ADDRESS =\n  \"e.g: 0x0cBb46287c93357be4CF60fe9601c2c7A2700dC2\";\n\ntype TFormData = {\n  name: string;\n  website: string;\n  contactInfo: string;\n  ipAddress: string;\n  nodeAddress: string;\n};\n\nconst useStyles = makeStyles((theme) => ({\n  form: {\n    maxWidth: \"100%\",\n    // maxWidth: \"80ch\",\n    width: \"100%\",\n  },\n  textField: {\n    \"& label.Mui-focused\": {\n      color: \"#f5f5f5\",\n    },\n  },\n}));\n\n/**\n * A single component to handle both \"Guardian registration\" and \"Guardian Update\"\n */\nexport const GuardiansDetailsForm = React.memo<\n  IProps &\n    DetailedHTMLProps<\n      React.FormHTMLAttributes<HTMLFormElement>,\n      HTMLFormElement\n    >\n>((props) => {\n  const classes = useStyles();\n  const {\n    guardianInitialInfo,\n    submitInfo,\n    actionButtonTitle,\n    disableSubmit,\n    messageForSubmitButton,\n    ...rest\n  } = props;\n\n  const { register, handleSubmit, errors } = useForm<TFormData>();\n\n  const name = useStateful(guardianInitialInfo.name);\n  const website = useStateful(guardianInitialInfo.website);\n  // const contactInfo = useStateful(guardianInitialInfo.contact);\n  const ipAddress = useStateful(guardianInitialInfo.ip);\n  const nodeAddress = useStateful(guardianInitialInfo.orbsAddr);\n\n  const errorNodeAddress = !!errors.nodeAddress;\n  const errorIPAddress = !!errors.ipAddress;\n  const errorWebsite = !!errors.website;\n\n  // DEV_NOTE : Taking ref for eslint-hooks\n  const nameSetValue = name.setValue;\n  const websiteSetValue = website.setValue;\n  // const contactInfoSetValue = contactInfo.setValue;\n  const ipAddressSetValue = ipAddress.setValue;\n  const nodeAddressSetValue = nodeAddress.setValue;\n\n  // DEV_NOTE : O.L : This is a hack to enforce update after registration,\n  // TODO : O.L : Fix this\n  useEffect(() => {\n    if (guardianInitialInfo) {\n      console.log(\"Re-setting data\");\n      nameSetValue(guardianInitialInfo.name);\n      websiteSetValue(guardianInitialInfo.website);\n      // contactInfoSetValue(guardianInitialInfo.contact);\n      ipAddressSetValue(guardianInitialInfo.ip);\n      nodeAddressSetValue(guardianInitialInfo.orbsAddr);\n    }\n  }, [\n    // contactInfoSetValue,\n    guardianInitialInfo,\n    ipAddressSetValue,\n    nameSetValue,\n    nodeAddressSetValue,\n    websiteSetValue,\n  ]);\n\n  const theme = useTheme();\n  const isMobile = useMediaQuery(theme.breakpoints.down(\"xs\"));\n  console.log(isMobile);\n\n  const buildHelperMessage = useCallback(\n    (hasError: boolean, errorText?: string, infoTexts?: React.ReactNode[]) => {\n      let message: React.ReactNode | undefined;\n      // DEV_NOTE: O.L :  We would like to display the info text to the user on mobile (no hove effect)\n      // if (isMobile) {\n      if (infoTexts) {\n        message = <FormHelperListTexts helperTexts={infoTexts} />;\n      }\n      // }\n\n      // If we have an error, we would like to display it\n      if (hasError && errorText) {\n        message = errorText;\n      }\n\n      return message;\n    },\n    []\n  );\n\n  // TODO : O.L : Add tx progress indicator\n  const submit = useCallback(\n    (formData: TFormData) => {\n      const guardianRegistrationPayload: TGuardianRegistrationPayload = {\n        ip: formData.ipAddress,\n        orbsAddr: formData.nodeAddress,\n        name: formData.name,\n        website: formData.website,\n        // contact: formData.contactInfo,\n      };\n      submitInfo(guardianRegistrationPayload);\n    },\n    [submitInfo]\n  );\n\n  // TODO : FUTURE : This forms will not look good on mobile, fix the text overflow\n  return (\n    <form\n      onSubmit={handleSubmit((formData) => submit(formData))}\n      className={classes.form}\n      {...rest}\n    >\n      {/*<InstallPhaseExtraDetails />*/}\n\n      <TextField\n        InputLabelProps={{ style: { pointerEvents: \"auto\" } }}\n        name={\"name\"}\n        label={\"Guardian name\"}\n        placeholder={PLACE_HOLDER_GUARDIAN_NAME}\n        title={INFO_MESSAGE_GUARDIAN_NAME[0]}\n        // helperText={buildHelperMessage(\n        //   false,\n        //   undefined,\n        //   INFO_MESSAGE_GUARDIAN_NAME\n        // )}\n        value={name.value}\n        onChange={(e) => name.setValue(e.target.value)}\n        required\n        inputRef={register}\n        fullWidth\n        className={classes.textField}\n        autoFocus\n      />\n      <br />\n      <TextField\n        fullWidth\n        name={\"website\"}\n        label={\"Guardian website\"}\n        placeholder={PLACE_HOLDER_WEBSITE}\n        title={INFO_MESSAGE_WEBSITE[0]}\n        // helperText={buildHelperMessage(\n        //   errorWebsite,\n        //   WEBSITE_MESSAGE,\n        //   INFO_MESSAGE_WEBSITE\n        // )}\n        helperText={errorWebsite && WEBSITE_MESSAGE}\n        value={website.value}\n        onChange={(e) => website.setValue(e.target.value)}\n        required\n        error={errorWebsite}\n        inputRef={register({ validate: validURL })}\n        className={classes.textField}\n      />\n      {/*<br />*/}\n      {/*<TextField*/}\n      {/*  fullWidth*/}\n      {/*  name={\"contactInfo\"}*/}\n      {/*  title={\"contactInfo\"}*/}\n      {/*  label={\"Contact Info\"}*/}\n      {/*  value={contactInfo.value}*/}\n      {/*  onChange={(e) => contactInfo.setValue(e.target.value)}*/}\n      {/*  required*/}\n      {/*  inputRef={register}*/}\n      {/*/>*/}\n      <br />\n      <TextField\n        fullWidth\n        name={\"ipAddress\"}\n        label={\"Node IP\"}\n        placeholder={PLACE_HOLDER_IP}\n        title={INFO_MESSAGE_IP[0]}\n        value={ipAddress.value}\n        onChange={(e) => ipAddress.setValue(e.target.value)}\n        required\n        inputRef={register({ pattern: IP_REGEX })}\n        error={errorIPAddress}\n        // helperText={buildHelperMessage(\n        //   errorIPAddress,\n        //   IP_ADDRESS_MESSAGE,\n        //   INFO_MESSAGE_IP\n        // )}\n        helperText={errorIPAddress && IP_ADDRESS_MESSAGE}\n        className={classes.textField}\n      />\n\n      <br />\n      <TextField\n        name={\"nodeAddress\"}\n        label={\"Node address\"}\n        placeholder={PLACE_HOLDER_NODE_ADDRESS}\n        title={INFO_MESSAGE_NODE_ADDRESS[1] as string}\n        value={nodeAddress.value}\n        onChange={(e) => nodeAddress.setValue(e.target.value)}\n        error={errorNodeAddress}\n        // helperText={buildHelperMessage(\n        //   errorNodeAddress,\n        //   NODE_ADDRESS_MESSAGE,\n        //   INFO_MESSAGE_NODE_ADDRESS\n        // )}\n        helperText={errorNodeAddress && NODE_ADDRESS_MESSAGE}\n        required\n        inputRef={register({ pattern: ETHEREUM_ADDRESS_REGEX })}\n        fullWidth\n        className={classes.textField}\n      />\n      <br />\n      <br />\n      <ActionButton type={\"submit\"} disabled={disableSubmit}>\n        {actionButtonTitle}\n      </ActionButton>\n      <br />\n      <br />\n      {messageForSubmitButton && (\n        <Typography\n          variant={\"body2\"}\n          color={\"error\"}\n          style={{ width: \"fit-content\" }}\n        >\n          {messageForSubmitButton}\n        </Typography>\n      )}\n    </form>\n  );\n});\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\ninterface IProps {}\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    padding: \"0.5rem 0\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    flexWrap: \"wrap\",\n    justifyItems: \"center\",\n    justifyContent: \"center\",\n  },\n}));\n\n/**\n * DEV_NOTE : O.L : Maybe find a better name for this component.\n * It is used to display 'DetailsList' in a fluid manner.\n */\nexport const DetailsListContainer = React.memo<IProps>((props) => {\n  const classes = useStyles();\n  const { children } = props;\n\n  return <div className={classes.container}>{children}</div>;\n});\n","import React from \"react\";\nimport { DetailsListContainer } from \"../components/detailsList/DetailsListContainer\";\nimport { DetailsList } from \"../components/detailsList/Detailslist\";\nimport {\n  GUARDIAN_ADDRESS_DETAILS_TEXTS,\n  NODE_ADDRESS_DETAILS_TEXTS,\n} from \"../constants/explainingTexts\";\nimport { Typography } from \"@material-ui/core\";\nimport { BoldText } from \"../components/texts/boldText\";\n\ninterface IProps {}\n\nexport const GuardianFormDetailsList = React.memo<IProps>((props) => {\n  return (\n    <DetailsListContainer>\n      <BoldText>Please Notice:</BoldText>\n      <DetailsList\n        conceptName={\"Guardian Address\"}\n        details={GUARDIAN_ADDRESS_DETAILS_TEXTS}\n      />\n      <DetailsList\n        conceptName={\"Node Address\"}\n        details={NODE_ADDRESS_DETAILS_TEXTS}\n      />\n    </DetailsListContainer>\n  );\n});\n","import React, { useCallback, useState } from \"react\";\nimport { GuardiansDetailsForm } from \"../forms/GuradiansDetailsForm\";\nimport { TGuardianInfo } from \"../../../store/OrbsAccountStore\";\nimport { Avatar, Box, Paper, Typography } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport PersonIcon from \"@material-ui/icons/Person\";\nimport { GuardianFormDetailsList } from \"../../GuardianFormDetailsList\";\nimport {\n  ICryptoWalletConnectionService,\n  TGuardianRegistrationPayload,\n} from \"@orbs-network/contracts-js\";\nimport { ActionButton } from \"../../../components/shared/ActionButton/ActionButton\";\nimport useTheme from \"@material-ui/core/styles/useTheme\";\n\ninterface IProps {\n  guardianAddress: string;\n  registerGuardian: (\n    guardianRegistrationPayload: TGuardianRegistrationPayload\n  ) => void;\n  cryptoWalletConnectionService: ICryptoWalletConnectionService;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n  },\n  boldText: {\n    fontWeight: \"bold\",\n    display: \"contents\",\n  },\n}));\n\nconst demoInitialInfo: TGuardianInfo = {\n  orbsAddr: \"0xe30a30069209aa4e7e7b07ab391966a0f071afd9\",\n  ip: \"12.114.252.82\",\n  // contact: \"A's contact info\",\n  website: \"a.com\",\n  name: \"A\",\n};\nconst emptyInitialInfo: TGuardianInfo = {\n  orbsAddr: \"\",\n  ip: \"\",\n  // contact: \"\",\n  website: \"\",\n  name: \"\",\n};\n\nconst MINIMAL_REQUIRED_ETH_BALANCE = 1;\n\nexport const RegisterGuardianSection = React.memo<IProps>((props) => {\n  const classes = useStyles();\n  const {\n    guardianAddress,\n    registerGuardian,\n    cryptoWalletConnectionService,\n  } = props;\n\n  const theme = useTheme();\n\n  const [errorMessage, setErrorMessage] = useState<string | undefined>(\n    undefined\n  );\n\n  // const { shouldDisable, messageToExplainDisable } = useMemo(() => {\n  //   let shouldDisable: boolean = false;\n  //   let messageToExplainDisable: string | undefined = undefined;\n  //\n  //   if (ethereumBalance < MINIMAL_REQUIRED_ETH_BALANCE) {\n  //     shouldDisable = true;\n  //     messageToExplainDisable =\n  //       \"A minimal balance of 1 Ether is required in order to register as a guardian\";\n  //   }\n  //\n  //   return {\n  //     shouldDisable,\n  //     messageToExplainDisable,\n  //   };\n  // }, [ethereumBalance]);\n\n  /**\n   * We will use this function to perform validations just before calling 'register'\n   */\n  const checkBalanceBeforeRegistration = useCallback(\n    async (guardianRegistrationPayload: TGuardianRegistrationPayload) => {\n      if (\n        guardianRegistrationPayload.orbsAddr.toLowerCase() ===\n        guardianAddress.toLowerCase()\n      ) {\n        setErrorMessage(\n          `Your Orbs node address cannot be the same as your Guardian address ${guardianAddress}`\n        );\n        return;\n      }\n\n      const orbsNodeBalance = await cryptoWalletConnectionService.readEthereumBalance(\n        guardianRegistrationPayload.orbsAddr\n      );\n\n      if (orbsNodeBalance < MINIMAL_REQUIRED_ETH_BALANCE) {\n        setErrorMessage(\n          `A minimal balance of 1 Ether at the 'Node Address' is required in order to register as a guardian.`\n        );\n        return;\n      }\n\n      registerGuardian(guardianRegistrationPayload);\n    },\n    [cryptoWalletConnectionService, guardianAddress, registerGuardian]\n  );\n\n  return (\n    <div\n      id={\"RegisterGuardianSection\"}\n      style={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n\n        //  DEV_NOTE : 'min-content' will allow us to limit width to the width of the address text (it has max-content width)\n        //            removing it will allow us to display elements wider than the address.\n        // If removed, add 'maxWidth'\n        width: \"min-content\",\n        maxWidth: \"100%\",\n      }}\n    >\n      <Avatar className={classes.avatar}>\n        <PersonIcon />\n      </Avatar>\n      <div\n        style={{\n          maxWidth: \"100%\",\n          textAlign: \"center\",\n        }}\n      >\n        <Typography variant={\"h5\"}>Guardian Registration</Typography>\n        <Typography variant={\"h6\"}>\n          Your <div className={classes.boldText}>Guardian address </div>\n          is:\n        </Typography>\n        <Typography\n          style={{\n            textOverflow: \"ellipsis\",\n            overflow: \"hidden\",\n          }}\n        >\n          {guardianAddress}\n        </Typography>\n      </div>\n\n      <GuardianFormDetailsList />\n\n      <GuardiansDetailsForm\n        submitInfo={checkBalanceBeforeRegistration}\n        guardianInitialInfo={emptyInitialInfo}\n        actionButtonTitle={\"Register\"}\n        messageForSubmitButton={errorMessage}\n      />\n    </div>\n  );\n});\n","import React from \"react\";\nimport { IServices } from \"./Services\";\nimport { MobXProviderContext } from \"mobx-react\";\nimport {\n  ICryptoWalletConnectionService,\n  IGuardiansService,\n} from \"@orbs-network/contracts-js\";\n\nexport function useServices(): IServices {\n  const services = React.useContext(MobXProviderContext) as IServices;\n\n  if (!services) {\n    throw new Error(\"Tried to use services before initialising them\");\n  }\n\n  return services;\n}\n\nexport function useCryptoWalletConnectionService(): ICryptoWalletConnectionService {\n  return useServices().cryptoWalletIntegrationService;\n}\n\nexport function useGuardiansService(): IGuardiansService {\n  return useServices().guardiansService;\n}\n","import React, { useCallback } from \"react\";\nimport { Page } from \"../../../components/structure/Page\";\nimport { ContentFitting } from \"../../../components/structure/ContentFitting\";\nimport {\n  Backdrop,\n  Box,\n  CircularProgress,\n  Paper,\n  Typography,\n} from \"@material-ui/core\";\nimport { RegisterGuardianSection } from \"./RegisterGuardianSection\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  useCryptoWalletIntegrationStore,\n  useOrbsAccountStore,\n} from \"../../../store/storeHooks\";\nimport { useSnackbar } from \"notistack\";\nimport { useCryptoWalletConnectionService } from \"../../../services/servicesHooks\";\nimport { TGuardianRegistrationPayload } from \"@orbs-network/contracts-js\";\nimport { ActionButton } from \"../../../components/shared/ActionButton/ActionButton\";\nimport useTheme from \"@material-ui/core/styles/useTheme\";\n\ninterface IProps {}\n\nconst useStyles = makeStyles((theme) => ({\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: \"#fff\",\n  },\n}));\n\nexport const GuardianRegistrationPage = React.memo<IProps>((props) => {\n  const classes = useStyles();\n  const theme = useTheme();\n\n  const { enqueueSnackbar } = useSnackbar();\n  const cryptoWalletIntegrationService = useCryptoWalletConnectionService();\n  const cryptoWalletIntegrationStore = useCryptoWalletIntegrationStore();\n  const orbsAccountStore = useOrbsAccountStore();\n\n  const registerGuardian = useCallback(\n    async (guardianRegistrationPayload: TGuardianRegistrationPayload) => {\n      try {\n        await orbsAccountStore.registerGuardian(guardianRegistrationPayload);\n      } catch (e) {\n        enqueueSnackbar(`Error in 'Guardian Registration' TX ${e.message}`, {\n          variant: \"error\",\n        });\n      }\n    },\n    [enqueueSnackbar, orbsAccountStore]\n  );\n\n  const unDelegate = useCallback(async () => {\n    try {\n      await orbsAccountStore.unDelegateCurrentDelegation();\n    } catch (e) {\n      enqueueSnackbar(`Error in 'un-delegating' TX ${e.message}`, {\n        variant: \"error\",\n      });\n    }\n  }, [enqueueSnackbar, orbsAccountStore]);\n\n  return (\n    <Page>\n      <ContentFitting>\n        {/* Content  */}\n        <div\n          style={{\n            display: \"flex\",\n            // flexDirection: \"column\",\n            maxWidth: \"100%\",\n            // textAlign: \"center\",\n            // alignItems: \"center\",\n            // alignContent: \"center\",\n          }}\n        >\n          {orbsAccountStore.isDelegatingToOtherAccount && (\n            <Box\n              component={Paper}\n              p={2}\n              m={2}\n              style={{\n                maxWidth: \"100%\",\n                textAlign: \"center\",\n                border: `1px dashed ${theme.palette.secondary.main}`,\n                overflowX: \"hidden\",\n              }}\n            >\n              <Typography\n                style={{\n                  fontWeight: \"bold\",\n                  color: theme.palette.warning.dark,\n                  textDecoration: \"underline\",\n                }}\n              >\n                Please note\n              </Typography>\n              <br />\n              <Typography style={{ fontWeight: \"bold\" }}>\n                Connected with address{\" \"}\n              </Typography>\n              <Typography\n                color={\"secondary\"}\n                noWrap\n                style={{ textOverflow: \"ellipsis\" }}\n              >\n                {cryptoWalletIntegrationStore.mainAddress}\n              </Typography>\n              <br />\n              <Typography style={{ fontWeight: \"bold\" }}>\n                This address is currently delegating to\n              </Typography>\n\n              <Typography\n                color={\"secondary\"}\n                noWrap\n                style={{ textOverflow: \"ellipsis\" }}\n              >\n                {orbsAccountStore.selectedGuardianAddress}\n              </Typography>\n              <br />\n              <Typography variant={\"body2\"}>\n                Prior to registering as a Guardian this delegation needs to be\n                cancelled.\n              </Typography>\n              <br />\n              <ActionButton onClick={unDelegate}> Undelegate </ActionButton>\n            </Box>\n          )}\n\n          {!orbsAccountStore.isDelegatingToOtherAccount && (\n            <RegisterGuardianSection\n              registerGuardian={registerGuardian}\n              guardianAddress={cryptoWalletIntegrationStore.mainAddress}\n              cryptoWalletConnectionService={cryptoWalletIntegrationService}\n            />\n          )}\n        </div>\n        <Backdrop\n          className={classes.backdrop}\n          open={orbsAccountStore.txPending}\n        >\n          <CircularProgress color=\"inherit\" />\n        </Backdrop>\n      </ContentFitting>\n    </Page>\n  );\n});\n","import React, { useCallback, useEffect, useMemo, useState } from \"react\";\nimport { Button, TextField, Typography } from \"@material-ui/core\";\nimport { useStateful, useBoolean } from \"react-hanger\";\nimport { useForm } from \"react-hook-form\";\nimport { config, Transition } from \"react-spring/renderprops-universal\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { InTextLink } from \"../../../components/InTextLink\";\nimport { validURL } from \"./inoputValidators\";\nimport { ActionButton } from \"../../../components/shared/ActionButton/ActionButton\";\n\ninterface IProps {\n  currentGuardianDetailsUrl?: string;\n  updateGuardianDetailsUrl: (guardianDetailsUrl: string) => void;\n  hasGuardianDetailsUrl?: boolean;\n\n  // External links\n  detailsRequirementsLink?: string;\n}\n\ntype TFormData = {\n  guardianDetailsUrl: string;\n};\n\nconst useStyles = makeStyles((theme) => ({\n  textField: {\n    \"& label.Mui-focused\": {\n      color: \"#f5f5f5\",\n    },\n  },\n}));\n\nexport const GuardiansDetailsUrlForm = React.memo<IProps>((props) => {\n  const classes = useStyles();\n  const {\n    currentGuardianDetailsUrl,\n    updateGuardianDetailsUrl,\n    hasGuardianDetailsUrl,\n    detailsRequirementsLink,\n  } = props;\n\n  const REWARDS_FREQUENCY_ERROR_MESSAGE = `Please use a valid URL`;\n  const REWARDS_FREQUENCY_DATA_MESSAGE = (\n    <Typography component={\"span\"} variant={\"caption\"}>\n      Setting a URL to your details page is a prerequisite for joining the{\" \"}\n      <InTextLink text={\"certified committee\"} href={detailsRequirementsLink} />\n    </Typography>\n  );\n\n  const showEditOptions = useBoolean(false);\n  const { register, handleSubmit, errors } = useForm<TFormData>();\n\n  const errorGuardianDetailsUrl = !!errors.guardianDetailsUrl;\n\n  const formGuardianDetailsUrl = useStateful(\"\");\n\n  const submitUpdate = useCallback(\n    (formData: TFormData) => {\n      updateGuardianDetailsUrl(formData.guardianDetailsUrl);\n    },\n    [updateGuardianDetailsUrl]\n  );\n\n  const setFormGuardianDetailsUrl = formGuardianDetailsUrl.setValue;\n  useEffect(() => {\n    setFormGuardianDetailsUrl(currentGuardianDetailsUrl || \"\");\n  }, [setFormGuardianDetailsUrl, currentGuardianDetailsUrl]);\n\n  const titleText = useMemo(() => {\n    return hasGuardianDetailsUrl ? (\n      <Typography component={\"span\"}>\n        Your details page :{\" \"}\n        <InTextLink\n          href={\n            currentGuardianDetailsUrl?.startsWith(\"http\")\n              ? currentGuardianDetailsUrl\n              : \"http://\" + currentGuardianDetailsUrl\n          }\n          text={currentGuardianDetailsUrl!}\n        />\n      </Typography>\n    ) : (\n      `You have not set your details page URL`\n    );\n  }, [currentGuardianDetailsUrl, hasGuardianDetailsUrl]);\n\n  return (\n    <form\n      style={{\n        maxWidth: \"100%\",\n        width: \"100%\",\n        display: \"relative\",\n      }}\n      onSubmit={handleSubmit(submitUpdate)}\n    >\n      <TextField\n        fullWidth\n        name={\"guardianDetailsUrl\"}\n        title={`Certified Committee URL`}\n        label={\"Certified Committee URL\"}\n        value={formGuardianDetailsUrl.value}\n        onChange={(e) => {\n          formGuardianDetailsUrl.setValue(e.target.value || \"\");\n        }}\n        required\n        inputRef={register({ validate: validURL })}\n        error={errorGuardianDetailsUrl}\n        helperText={\n          errorGuardianDetailsUrl\n            ? REWARDS_FREQUENCY_ERROR_MESSAGE\n            : REWARDS_FREQUENCY_DATA_MESSAGE\n        }\n        className={classes.textField}\n        autoFocus\n      />\n      <br />\n      <br />\n      <ActionButton type={\"submit\"}>\n        Update your Certified Committee URL\n      </ActionButton>\n    </form>\n  );\n});\n","import React from \"react\";\nimport { Avatar, Typography } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport VerifiedUserIcon from \"@material-ui/icons/VerifiedUser\";\nimport { InTextLink } from \"../../../../components/InTextLink\";\nimport { GuardiansDetailsUrlForm } from \"../../forms/GuardiansDetailsUrlForm\";\n\ninterface IProps {\n  currentGuardianDetailsUrl?: string;\n  updateGuardianDetailsUrl: (delegatorsCertificateUrl: string) => void;\n  hasGuardianDetailsUrl?: boolean;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n  },\n}));\n\nexport const DETAILS_REQUIREMENTS_LINK =\n  \"https://github.com/orbs-network/validator-instructions/blob/master/public/certified_committee.md\";\n\nexport const EditDelegatorsCertificateSection = React.memo<IProps>((props) => {\n  const classes = useStyles();\n  const {\n    currentGuardianDetailsUrl,\n    hasGuardianDetailsUrl,\n    updateGuardianDetailsUrl,\n  } = props;\n  return (\n    <>\n      <Avatar className={classes.avatar}>\n        <VerifiedUserIcon />\n      </Avatar>\n      <Typography variant={\"h5\"}>\n        Guardian’s Information{\" \"}\n        <InTextLink text={\"( ? )\"} href={DETAILS_REQUIREMENTS_LINK} />\n      </Typography>\n      <GuardiansDetailsUrlForm\n        currentGuardianDetailsUrl={currentGuardianDetailsUrl}\n        hasGuardianDetailsUrl={hasGuardianDetailsUrl}\n        updateGuardianDetailsUrl={updateGuardianDetailsUrl}\n        detailsRequirementsLink={DETAILS_REQUIREMENTS_LINK}\n      />\n    </>\n  );\n});\n","import React, { DetailedHTMLProps, useMemo } from \"react\";\nimport { TGuardianInfo } from \"../../../store/OrbsAccountStore\";\nimport { Paper, Typography } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport clsx from \"clsx\";\nimport { PaperProps } from \"@material-ui/core/Paper/Paper\";\nimport { InTextLink } from \"../../../components/InTextLink\";\nimport { DETAILS_REQUIREMENTS_LINK } from \"./sections/EditDelegatorsCertificateSection\";\n\nexport interface IDefaultableValue<T> {\n  isUsingDefaultValue: boolean;\n  defaultValue: T;\n  value?: T;\n}\n\ninterface IProps {\n  guardianAddress: string;\n  guardianInfo: TGuardianInfo;\n  delegatorsShare: IDefaultableValue<number> & { maxValue: number };\n  guardianCertificationUrl: {\n    currentGuardianDetailsUrl: string;\n    hasGuardianDetailsUrl?: boolean;\n  };\n  highlightInfo?: boolean;\n  highlightDelegatorsShare?: boolean;\n  highlightCertificateUrl?: boolean;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    transition: \"0.5s\",\n    fontWeight: \"bold\",\n  },\n  titleHighlight: {\n    color: theme.palette.secondary.light,\n  },\n  titleFade: {\n    color: theme.palette.text.disabled,\n  },\n  value: {\n    transition: \"0.5s\",\n  },\n  valueHighlight: {\n    color: theme.palette.secondary.main,\n  },\n  valueFade: {\n    color: theme.palette.text.disabled,\n  },\n}));\n\nexport const GuardianDetails = React.memo<IProps & PaperProps>((props) => {\n  const classes = useStyles();\n  const {\n    guardianAddress,\n    guardianInfo,\n    delegatorsShare,\n    guardianCertificationUrl,\n\n    highlightInfo,\n    highlightDelegatorsShare,\n    highlightCertificateUrl,\n\n    ...rest\n  } = props;\n\n  const shouldFadeOthers =\n    highlightInfo || highlightDelegatorsShare || highlightCertificateUrl;\n\n  const delegatorsShareUsingDefaultMessage = delegatorsShare.isUsingDefaultValue\n    ? \" (using default value)\"\n    : null;\n\n  const guardianCertificateUrlDataText = useMemo(() => {\n    return guardianCertificationUrl.hasGuardianDetailsUrl ? (\n      <Typography component={\"span\"}>\n        <InTextLink\n          href={\n            guardianCertificationUrl.currentGuardianDetailsUrl?.startsWith(\n              \"http\"\n            )\n              ? guardianCertificationUrl.currentGuardianDetailsUrl\n              : \"http://\" + guardianCertificationUrl.currentGuardianDetailsUrl\n          }\n          text={guardianCertificationUrl.currentGuardianDetailsUrl!}\n          shouldfade={!highlightCertificateUrl && shouldFadeOthers}\n        />\n      </Typography>\n    ) : (\n      `You have not set your details page URL`\n    );\n  }, [\n    guardianCertificationUrl.currentGuardianDetailsUrl,\n    guardianCertificationUrl.hasGuardianDetailsUrl,\n    highlightCertificateUrl,\n    shouldFadeOthers,\n  ]);\n\n  return (\n    <Paper\n      elevation={3}\n      {...rest}\n      style={{\n        padding: \"1.5rem\",\n        maxWidth: \"100%\",\n        width: \"30rem\",\n        overflow: \"hidden\",\n      }}\n    >\n      <TitleValuePair\n        title={\"Guardian address : \"}\n        value={guardianAddress}\n        shouldfade={shouldFadeOthers}\n      />\n      <br />\n      <TitleValuePair\n        title={\"Guardian name : \"}\n        value={guardianInfo.name}\n        shouldHighlight={highlightInfo}\n        shouldfade={!highlightInfo && shouldFadeOthers}\n      />\n      <br />\n      <TitleValuePair\n        title={\"Guardian website : \"}\n        value={\n          <InTextLink\n            text={guardianInfo.website}\n            href={guardianInfo.website}\n            shouldfade={!highlightInfo && shouldFadeOthers}\n          />\n        }\n        shouldHighlight={highlightInfo}\n        shouldfade={!highlightInfo && shouldFadeOthers}\n      />\n      <br />\n      <TitleValuePair\n        title={\"Node IP : \"}\n        value={guardianInfo.ip}\n        shouldHighlight={highlightInfo}\n        shouldfade={!highlightInfo && shouldFadeOthers}\n      />\n\n      <br />\n      <TitleValuePair\n        title={\"Node address : \"}\n        value={guardianInfo.orbsAddr}\n        shouldHighlight={highlightInfo}\n        shouldfade={!highlightInfo && shouldFadeOthers}\n      />\n      <br />\n      <TitleValuePair\n        title={`Delegators share${delegatorsShareUsingDefaultMessage} : `}\n        value={`${\n          delegatorsShare.isUsingDefaultValue\n            ? delegatorsShare.defaultValue\n            : delegatorsShare.value\n        } %`}\n        shouldHighlight={highlightDelegatorsShare}\n        shouldfade={!highlightDelegatorsShare && shouldFadeOthers}\n      />\n      <br />\n\n      <TitleValuePair\n        title={\n          <>\n            Guardian details URL (\n            <InTextLink\n              text={\"Certified Committee\"}\n              href={DETAILS_REQUIREMENTS_LINK}\n              shouldfade={!highlightCertificateUrl && shouldFadeOthers}\n            />\n            ) :\n          </>\n        }\n        value={guardianCertificateUrlDataText}\n        shouldHighlight={highlightCertificateUrl}\n        shouldfade={!highlightCertificateUrl && shouldFadeOthers}\n      />\n    </Paper>\n  );\n});\n\ninterface ITitleValuePairProps {\n  title: string | JSX.Element;\n  value: string | JSX.Element;\n  shouldHighlight?: boolean;\n  shouldfade?: boolean;\n}\n\nconst TitleValuePair = React.memo<ITitleValuePairProps>((props) => {\n  const { title, value, shouldHighlight, shouldfade } = props;\n  const classes = useStyles();\n\n  return (\n    <>\n      <Typography\n        className={clsx(\n          classes.title,\n          shouldHighlight ? classes.titleHighlight : null,\n          shouldfade ? classes.titleFade : null\n        )}\n      >\n        {title}\n      </Typography>\n      <Typography\n        className={clsx(\n          classes.value,\n          shouldHighlight ? classes.valueHighlight : null,\n          shouldfade ? classes.valueFade : null\n        )}\n      >\n        {value}\n      </Typography>\n    </>\n  );\n});\n","import React, { useCallback } from \"react\";\nimport { Button } from \"@material-ui/core\";\nimport { useBoolean } from \"react-hanger\";\nimport { useForm } from \"react-hook-form\";\nimport { Transition } from \"react-spring/renderprops-universal\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { ActionButton } from \"../../../components/shared/ActionButton/ActionButton\";\n\ninterface IProps {\n  unregisterGuardian: () => void;\n}\n\ntype TFormData = {\n  rewardsFrequencyInHours: number;\n};\n\nconst REWARDS_FREQUENCY_MESSAGE = \"Minimum frequency is 12 hours\";\n\nconst useStyles = makeStyles((theme) => ({\n  textField: {\n    \"& label.Mui-focused\": {\n      color: \"#f5f5f5\",\n    },\n  },\n\n  openUnregisterMenuButton: {\n    color: theme.palette.warning.main,\n    borderColor: theme.palette.warning.main,\n  },\n\n  closeUnregisterMenuButton: {\n    color: theme.palette.secondary.main,\n    borderColor: theme.palette.secondary.main,\n  },\n\n  unregisterButton: {\n    color: theme.palette.error.main,\n    borderColor: theme.palette.error.main,\n  },\n}));\n\nexport const UnregisterForm = React.memo<IProps>((props) => {\n  const classes = useStyles();\n  const { unregisterGuardian } = props;\n\n  const userWantsToUnregister = useBoolean(false);\n\n  const { register, handleSubmit, errors } = useForm<TFormData>();\n\n  const submitUnregister = useCallback(\n    (formData: TFormData) => {\n      unregisterGuardian();\n    },\n    [unregisterGuardian]\n  );\n\n  return (\n    <form\n      style={{\n        maxWidth: \"100%\",\n        width: \"100%\",\n      }}\n      onSubmit={handleSubmit(submitUnregister)}\n    >\n      <ActionButton type={\"submit\"} errorVariant>\n        Unregister\n      </ActionButton>\n    </form>\n  );\n});\n","import React from \"react\";\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  Typography,\n  useMediaQuery,\n  useTheme,\n} from \"@material-ui/core\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\n\ninterface IProps {\n  // Dialog\n  open: boolean;\n  // handleClose: () => void;\n  onAccept: () => void;\n  onCancel: () => void;\n\n  // Content\n  title: string;\n  contentText?: string;\n  instructionText?: string;\n  acceptText?: string;\n  cancelText?: string;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  dialogPaper: {\n    \"& .MuiDialog-paper\": {\n      border: `4px double ${theme.palette.secondary.main}`,\n      boxShadow: \"none\",\n      minWidth: \"20rem\",\n      maxWidth: \"100%\",\n    },\n  },\n  button: {\n    minWidth: \"6rem\",\n  },\n}));\n\nexport const ActionConfirmationModal = React.memo<IProps>((props) => {\n  const classes = useStyles();\n  const {\n    open,\n    onAccept,\n    onCancel,\n    // handleClose,\n    title,\n    contentText,\n    instructionText,\n    acceptText,\n    cancelText,\n  } = props;\n  const theme = useTheme();\n  // const fullScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\n  const fullScreen = false;\n\n  return (\n    <Dialog\n      className={classes.dialogPaper}\n      fullScreen={fullScreen}\n      open={open}\n      onClose={onCancel}\n      aria-labelledby=\"action-confirmation-dialog\"\n      maxWidth={\"xs\"}\n      style={{}}\n    >\n      <DialogTitle id=\"action-confirmation-dialog-title\">{title}</DialogTitle>\n      {contentText && (\n        <DialogContent>\n          <DialogContentText>\n            <Typography>{contentText}</Typography>\n          </DialogContentText>\n        </DialogContent>\n      )}\n      <DialogContent>\n        <DialogContentText>\n          <Typography variant={\"body2\"}>{instructionText}</Typography>\n        </DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button\n          className={classes.button}\n          autoFocus\n          onClick={onCancel}\n          color=\"secondary\"\n          variant={\"contained\"}\n        >\n          {cancelText || \"Cancel\"}\n        </Button>\n        <Button\n          className={classes.button}\n          onClick={onAccept}\n          color=\"secondary\"\n          autoFocus\n          variant={\"contained\"}\n        >\n          {acceptText || \"Accept\"}\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n});\n","import React, { useCallback, useEffect, useMemo, useState } from \"react\";\nimport { Button, TextField, Typography } from \"@material-ui/core\";\nimport { useBoolean, useNumber } from \"react-hanger\";\nimport { useForm } from \"react-hook-form\";\nimport { config, Transition } from \"react-spring/renderprops-universal\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { ActionButton } from \"../../../components/shared/ActionButton/ActionButton\";\n\ninterface IProps {\n  currentDelegatorsCut?: number;\n  updateDelegatorsCut: (delegatorsCut: number) => void;\n  isUsingDefaultValue?: boolean;\n\n  // Configs\n  delegatorsCutMaxValue: number;\n  delegatorsCutDefaultValue: number;\n}\n\ntype TFormData = {\n  delegatorsCut: string;\n};\n\nconst useStyles = makeStyles((theme) => ({\n  textField: {\n    \"& label.Mui-focused\": {\n      color: \"#f5f5f5\",\n    },\n  },\n}));\n\nexport const DelegatorsShareForm = React.memo<IProps>((props) => {\n  const classes = useStyles();\n  const {\n    currentDelegatorsCut,\n    updateDelegatorsCut,\n    isUsingDefaultValue,\n    delegatorsCutDefaultValue,\n    delegatorsCutMaxValue,\n  } = props;\n\n  const REWARDS_FREQUENCY_MESSAGE = `Valid values are between 0 and ${delegatorsCutMaxValue}`;\n\n  const showEditOptions = useBoolean(false);\n  const { register, handleSubmit, errors } = useForm<TFormData>();\n\n  const delegatorsCut = useNumber(Math.min(currentDelegatorsCut || 0, 66), {\n    upperLimit: delegatorsCutMaxValue,\n  });\n\n  const errorDelegatorsCut = !!errors.delegatorsCut;\n\n  const submitUpdate = useCallback(\n    (formData: TFormData) => {\n      updateDelegatorsCut(parseFloat(formData.delegatorsCut));\n    },\n    [updateDelegatorsCut]\n  );\n\n  const setDelegCut = delegatorsCut.setValue;\n  useEffect(() => {\n    setDelegCut(Math.min(currentDelegatorsCut || 0, delegatorsCutMaxValue));\n  }, [currentDelegatorsCut, delegatorsCutMaxValue, setDelegCut]);\n\n  console.log({ currentDelegatorsCut });\n\n  const titleText = useMemo(() => {\n    return isUsingDefaultValue\n      ? `Current share : Default value (${delegatorsCutDefaultValue}%)`\n      : `Current share : ${currentDelegatorsCut}%`;\n  }, [currentDelegatorsCut, delegatorsCutDefaultValue, isUsingDefaultValue]);\n\n  return (\n    <form\n      style={{\n        maxWidth: \"100%\",\n        width: \"100%\",\n        display: \"relative\",\n      }}\n      onSubmit={handleSubmit(submitUpdate)}\n    >\n      <TextField\n        fullWidth\n        name={\"delegatorsCut\"}\n        title={`Delegators share (% out of staking rewards)`}\n        label={\"Delegators share (% out of staking rewards)\"}\n        value={delegatorsCut.value}\n        inputProps={{\n          step: 1,\n        }}\n        onChange={(e) => {\n          delegatorsCut.setValue(parseFloat(e.target.value) || 0);\n        }}\n        required\n        type={\"number\"}\n        inputRef={register({\n          max: delegatorsCutMaxValue,\n        })}\n        error={errorDelegatorsCut}\n        helperText={\n          errorDelegatorsCut\n            ? REWARDS_FREQUENCY_MESSAGE\n            : `The percentage of the staking rewards that is distributed to your Delegators, between 0% and ${delegatorsCutMaxValue}%`\n        }\n        InputProps={{\n          startAdornment: \"%\",\n        }}\n        className={classes.textField}\n        autoFocus\n      />\n      <br />\n      <br />\n      <ActionButton type={\"submit\"} fullWidth>\n        Update Delegators share\n      </ActionButton>\n    </form>\n  );\n});\n","import React from \"react\";\nimport { Paper } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\ninterface IProps {}\n\nconst useStyles = makeStyles((theme) => ({\n  formWrapper: {\n    padding: \"1.5rem\",\n    maxWidth: \"100%\",\n    overflow: \"hidden\",\n    width: \"30rem\",\n    transition: \"0.7s\",\n    border: \"2px dashed rgba(0,0,0,0)\",\n    \"&:focus-within, &:hover\": {\n      border: `2px dashed ${theme.palette.secondary.dark}`,\n    },\n  },\n}));\n\nexport const FormWrapper = React.memo<IProps>((props) => {\n  const classes = useStyles();\n  const { children } = props;\n  return (\n    <Paper elevation={3} className={classes.formWrapper}>\n      {children}\n    </Paper>\n  );\n});\n","import React, { useCallback, useState } from \"react\";\nimport { Page } from \"../../../components/structure/Page\";\nimport { ContentFitting } from \"../../../components/structure/ContentFitting\";\nimport { Backdrop, Box, CircularProgress, Tab, Tabs } from \"@material-ui/core\";\nimport {\n  useCryptoWalletIntegrationStore,\n  useOrbsAccountStore,\n} from \"../../../store/storeHooks\";\nimport { useSnackbar } from \"notistack\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { observer } from \"mobx-react\";\nimport { TGuardianUpdatePayload } from \"@orbs-network/contracts-js\";\nimport { DETAILS_REQUIREMENTS_LINK } from \"./sections/EditDelegatorsCertificateSection\";\nimport useTheme from \"@material-ui/core/styles/useTheme\";\nimport { GuardianDetails } from \"./GuardianDetails\";\nimport { UnregisterForm } from \"../forms/UnregisterForm\";\nimport { ActionConfirmationModal } from \"../../../components/shared/modals/ActionConfirmationModal\";\nimport { DelegatorsShareForm } from \"../forms/DelegatorsShareForm\";\nimport { FormWrapper } from \"../../../components/forms/FormWrapper\";\nimport { GuardiansDetailsUrlForm } from \"../forms/GuardiansDetailsUrlForm\";\nimport { GuardiansDetailsForm } from \"../forms/GuradiansDetailsForm\";\nimport { BoxProps } from \"@material-ui/core/Box/Box\";\n\ninterface IProps {}\n\nconst useStyles = makeStyles((theme) => ({\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: \"#fff\",\n  },\n  tab: {\n    transition: \"0.5s\",\n    color: theme.palette.secondary.dark,\n    opacity: 0.5,\n\n    \"&:hover\": {\n      // backgroundColor: \"rgba(255,255,255, 0.1)\",\n    },\n\n    \"&.MuiTab-textColorPrimary.Mui-selected\": {\n      // backgroundColor: \"rgba(255,255,255, 0.1)\",\n\n      fontWeight: \"bold\",\n      color: theme.palette.secondary.main,\n      opacity: 1,\n    },\n  },\n  tabPanel: {\n    maxWidth: \"100%\",\n    overflow: \"hidden\",\n  },\n}));\n\nconst TABS_IDS = {\n  info: \"info\",\n  editInfo: \"editInfo\",\n  delegatorsShare: \"delegatorsShare\",\n  certificate: \"certificate\",\n  unregister: \"unregister\",\n};\n\nexport const GuardianEditingPage = observer<React.FunctionComponent<IProps>>(\n  (props) => {\n    const classes = useStyles();\n    const theme = useTheme();\n\n    const { enqueueSnackbar } = useSnackbar();\n    const cryptoWalletIntegrationStore = useCryptoWalletIntegrationStore();\n    const orbsAccountStore = useOrbsAccountStore();\n\n    // TODO : ORL : The whole modal logic is duplicated from 'Subscription UI' - Unite them properly\n    const [showModal, setShowModal] = useState(false);\n    const [onDialogAccept, setOnDialogAccept] = useState(() => () =>\n      console.log(\"Accepted\")\n    );\n    const [dialogTexts, setDialogTexts] = useState<{\n      title: string;\n      content?: string;\n      instruction?: string;\n      acceptText?: string;\n      cancelText?: string;\n      onCancelMessage?: string;\n    }>({ title: \"\", content: \"\", instruction: \"\" });\n\n    const updateGuardianDetails = useCallback(\n      async (guardianRegistrationPayload: TGuardianUpdatePayload) => {\n        setDialogTexts({\n          title: `Update your Details`,\n          instruction: \"Please press 'Accept' and confirm the transaction\",\n          onCancelMessage: \"Action canceled\",\n        });\n        setShowModal(true);\n        setOnDialogAccept(() => async () => {\n          try {\n            const txRes = await orbsAccountStore.updateGuardianInfo(\n              guardianRegistrationPayload\n            );\n\n            if (txRes) {\n              enqueueSnackbar(\"Guardian details successfully updated\", {\n                variant: \"success\",\n              });\n            }\n          } catch (e) {\n            enqueueSnackbar(\n              `Error in 'Guardian Details Update' TX ${e.message}`,\n              {\n                variant: \"error\",\n              }\n            );\n          }\n        });\n      },\n      [enqueueSnackbar, orbsAccountStore]\n    );\n\n    const updateDelegatorsShare = useCallback(\n      async (delegatorsSharePercentage: number) => {\n        setDialogTexts({\n          title: `Update Delegators share`,\n          content: `Your Delegator's share will change to to ${delegatorsSharePercentage.toLocaleString()}%`,\n          instruction: \"Please press 'Accept' and confirm the transaction\",\n          onCancelMessage: \"Action canceled\",\n        });\n        setShowModal(true);\n        setOnDialogAccept(() => async () => {\n          try {\n            const txRes = await orbsAccountStore.writeGuardianDelegatorsCutPercentage(\n              delegatorsSharePercentage\n            );\n\n            if (txRes) {\n              enqueueSnackbar(\"Delegators share successfully updated\", {\n                variant: \"success\",\n              });\n            }\n          } catch (e) {\n            enqueueSnackbar(\n              `Error in 'Delegators share percentage Update' TX ${e.message}`,\n              {\n                variant: \"error\",\n              }\n            );\n          }\n        });\n      },\n      [enqueueSnackbar, orbsAccountStore]\n    );\n\n    const updateGuardianDetailsPage = useCallback(\n      async (guardianDetailsPageUrl: string) => {\n        setDialogTexts({\n          title: `Update details page URL`,\n          content: `Your details page URL will change to ${guardianDetailsPageUrl}`,\n          instruction: \"Please press 'Accept' and confirm the transaction\",\n          onCancelMessage: \"Action canceled\",\n        });\n        setShowModal(true);\n        setOnDialogAccept(() => async () => {\n          try {\n            const txRes = await orbsAccountStore.writeGuardianDetailsPageURL(\n              guardianDetailsPageUrl\n            );\n\n            if (txRes) {\n              enqueueSnackbar(\"Guardian details page URL updated\", {\n                variant: \"success\",\n              });\n            }\n          } catch (e) {\n            enqueueSnackbar(\n              `Error in 'Guardian details page URL Update' TX ${e.message}`,\n              {\n                variant: \"error\",\n              }\n            );\n          }\n        });\n      },\n      [enqueueSnackbar, orbsAccountStore]\n    );\n\n    const unregisterGuardian = useCallback(async () => {\n      setDialogTexts({\n        title: `You are about to unregister from the Orbs Guardian role`,\n        content:\n          \"You and your Delegators will no longer be eligible for rewards\",\n        instruction: \"Are you sure ?\",\n        acceptText: \"yes\",\n        onCancelMessage: \"Action canceled\",\n      });\n      setShowModal(true);\n      setOnDialogAccept(() => async () => {\n        try {\n          await orbsAccountStore.unregisterGuardian();\n        } catch (e) {\n          enqueueSnackbar(`Error in 'Unregister guardian' TX ${e.message}`, {\n            variant: \"error\",\n          });\n        }\n      });\n    }, [enqueueSnackbar, orbsAccountStore]);\n\n    const [tabValue, setTabValue] = React.useState(TABS_IDS.info);\n\n    const guardianDetails = (\n      <GuardianDetails\n        guardianAddress={cryptoWalletIntegrationStore.mainAddress}\n        guardianInfo={orbsAccountStore.guardianInfo}\n        delegatorsShare={{\n          defaultValue:\n            orbsAccountStore.rewardsContractSettings\n              .defaultDelegatorsStakingRewardsPercent,\n          isUsingDefaultValue:\n            orbsAccountStore.isUsingDefaultDelegatorsCutPercentage,\n          maxValue:\n            orbsAccountStore.rewardsContractSettings\n              .maxDelegatorsStakingRewardsPercent,\n          value: orbsAccountStore.delegatorsCutPercentage,\n        }}\n        guardianCertificationUrl={{\n          currentGuardianDetailsUrl: orbsAccountStore.detailsPageUrl || \"\",\n          hasGuardianDetailsUrl: orbsAccountStore.hasGuardianDetailsURL,\n        }}\n        highlightInfo={tabValue === TABS_IDS.editInfo}\n        highlightDelegatorsShare={tabValue === TABS_IDS.delegatorsShare}\n        highlightCertificateUrl={tabValue === TABS_IDS.certificate}\n      />\n    );\n\n    const showDetails = tabValue !== TABS_IDS.unregister;\n\n    return (\n      <Page>\n        <ContentFitting\n          style={{\n            width: \"35rem\",\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n          }}\n        >\n          {/* Content  */}\n          <div\n            style={{\n              display: \"flex\",\n              flexDirection: \"column\",\n              maxWidth: \"100%\",\n              width: \"min-content\",\n              alignItems: \"center\",\n            }}\n          >\n            {/*  TODO : ORL : Make the 'Tabs' scrollable on mobile */}\n            {/*  Tabs  */}\n            <div style={{}}>\n              <Tabs\n                scrollButtons={\"auto\"}\n                value={tabValue}\n                onChange={(event, value) => setTabValue(value)}\n                variant=\"fullWidth\"\n                indicatorColor=\"secondary\"\n                textColor=\"primary\"\n                aria-label=\"icon tabs example\"\n                TabIndicatorProps={{\n                  color: \"secondary\",\n                }}\n              >\n                <Tab\n                  // textColor={\"secondary\"}\n                  // icon={<PermIdentityIcon />}\n                  label=\"Info\"\n                  aria-label=\"phone\"\n                  className={classes.tab}\n                  value={TABS_IDS.info}\n                />\n                <Tab\n                  className={classes.tab}\n                  // icon={<EditIcon />}\n                  label={\"Edit Info\"}\n                  value={TABS_IDS.editInfo}\n                  aria-label=\"phone\"\n                />\n                <Tab\n                  className={classes.tab}\n                  // icon={<MoneyIcon />}\n                  label={\"Delegators share\"}\n                  value={TABS_IDS.delegatorsShare}\n                  aria-label=\"favorite\"\n                />\n                <Tab\n                  className={classes.tab}\n                  // icon={<VerifiedUserIcon />}\n                  // label={\"Certificate URL\"}\n                  label={\"Guardian details URL\"}\n                  value={TABS_IDS.certificate}\n                  aria-label=\"favorite\"\n                />\n                <Tab\n                  className={classes.tab}\n                  // icon={<HighlightOffIcon />}\n                  label={\"Unregister\"}\n                  value={TABS_IDS.unregister}\n                  aria-label=\"person\"\n                />\n              </Tabs>\n            </div>\n            {showDetails && guardianDetails}\n\n            {/* Info */}\n            <TabPanel\n              className={classes.tabPanel}\n              value={tabValue}\n              index={TABS_IDS.info}\n              dir={theme.direction}\n            ></TabPanel>\n\n            {/* Edit Details */}\n            <TabPanel\n              className={classes.tabPanel}\n              value={tabValue}\n              index={TABS_IDS.editInfo}\n              dir={theme.direction}\n            >\n              <FormWrapper>\n                <GuardiansDetailsForm\n                  submitInfo={updateGuardianDetails}\n                  guardianInitialInfo={orbsAccountStore.guardianInfo}\n                  actionButtonTitle={\"Update\"}\n                />\n                {/*<Typography variant={\"h6\"}>*/}\n                {/*    Details Last updated: {lastUpdateDate.toLocaleString()}*/}\n                {/*</Typography>*/}\n              </FormWrapper>\n            </TabPanel>\n            {/* Edit Delegator's share */}\n            <TabPanel\n              className={classes.tabPanel}\n              value={tabValue}\n              index={TABS_IDS.delegatorsShare}\n              dir={theme.direction}\n            >\n              <FormWrapper>\n                <DelegatorsShareForm\n                  updateDelegatorsCut={updateDelegatorsShare}\n                  currentDelegatorsCut={\n                    orbsAccountStore.delegatorsCutPercentage\n                  }\n                  isUsingDefaultValue={\n                    orbsAccountStore.isUsingDefaultDelegatorsCutPercentage\n                  }\n                  delegatorsCutDefaultValue={\n                    orbsAccountStore.rewardsContractSettings\n                      .defaultDelegatorsStakingRewardsPercent\n                  }\n                  delegatorsCutMaxValue={\n                    orbsAccountStore.rewardsContractSettings\n                      .maxDelegatorsStakingRewardsPercent\n                  }\n                />\n              </FormWrapper>\n            </TabPanel>\n            {/* Edit Guardian Certification  */}\n            <TabPanel\n              className={classes.tabPanel}\n              value={tabValue}\n              index={TABS_IDS.certificate}\n              dir={theme.direction}\n            >\n              <FormWrapper>\n                <GuardiansDetailsUrlForm\n                  currentGuardianDetailsUrl={orbsAccountStore.detailsPageUrl}\n                  hasGuardianDetailsUrl={orbsAccountStore.hasGuardianDetailsURL}\n                  updateGuardianDetailsUrl={updateGuardianDetailsPage}\n                  detailsRequirementsLink={DETAILS_REQUIREMENTS_LINK}\n                />\n              </FormWrapper>\n            </TabPanel>\n            {/* Unregister */}\n            <TabPanel\n              className={classes.tabPanel}\n              value={tabValue}\n              index={TABS_IDS.unregister}\n              dir={theme.direction}\n            >\n              <UnregisterForm unregisterGuardian={unregisterGuardian} />\n            </TabPanel>\n          </div>\n\n          {/* Modal */}\n          <ActionConfirmationModal\n            title={dialogTexts.title}\n            contentText={dialogTexts.content}\n            instructionText={dialogTexts.instruction}\n            open={showModal}\n            acceptText={dialogTexts.acceptText}\n            cancelText={dialogTexts.cancelText}\n            onAccept={() => {\n              setShowModal(false);\n              onDialogAccept();\n            }}\n            onCancel={() => {\n              setShowModal(false);\n              if (dialogTexts.onCancelMessage) {\n                enqueueSnackbar(dialogTexts.onCancelMessage, {\n                  variant: \"info\",\n                  preventDuplicate: true,\n                });\n              }\n            }}\n          />\n\n          <Backdrop\n            className={classes.backdrop}\n            open={orbsAccountStore.txPending}\n          >\n            <CircularProgress color=\"inherit\" />\n          </Backdrop>\n        </ContentFitting>\n      </Page>\n    );\n  }\n);\n\ninterface TabPanelProps {\n  children?: React.ReactNode;\n  dir?: string;\n  index: any;\n  value: any;\n}\n\nfunction TabPanel(props: TabPanelProps & BoxProps) {\n  const { children, value, index, ...other } = props;\n\n  return value === index ? (\n    <Box p={3} {...other}>\n      {children}\n    </Box>\n  ) : null;\n\n  // return (\n  //   <div\n  //     role=\"tabpanel\"\n  //     hidden={value !== index}\n  //     id={`full-width-tabpanel-${index}`}\n  //     aria-labelledby={`full-width-tab-${index}`}\n  //     {...other}\n  //   >\n  //     {value === index && <Box p={3}>{children}</Box>}\n  //   </div>\n  // );\n}\n","import React from \"react\";\nimport { observer } from \"mobx-react\";\nimport { useOrbsAccountStore } from \"../../store/storeHooks\";\nimport { ErrorLoadingPage } from \"../error/ErrorLoadingPage\";\nimport { LoadingPage } from \"../loading/LoadingPage\";\nimport { GuardianRegistrationPage } from \"./guardianRegister/GuardianRegistrationPage\";\nimport { GuardianEditingPage } from \"./guardianEdit/GuardiansEditingPage\";\n\ninterface IProps {}\n\nexport const GuardiansRegisterOrEditPage = observer<\n  React.FunctionComponent<IProps>\n>((props) => {\n  const orbsAccountStore = useOrbsAccountStore();\n\n  // TODO : ORL : Organize all of this loading \"ifs\"\n  if (orbsAccountStore.errorLoading) {\n    return <ErrorLoadingPage />;\n  }\n\n  if (!orbsAccountStore.doneLoading) {\n    return <LoadingPage />;\n  }\n\n  if (orbsAccountStore.isGuardian) {\n    return <GuardianEditingPage />;\n  } else {\n    return <GuardianRegistrationPage />;\n  }\n});\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { AppWrapper } from \"./AppWrapper\";\nimport { NoEthereumProviderPage } from \"./pages/NoEthereumProviderPage\";\nimport App from \"./App\";\n\nconst hasEthereumProvider = !!(window as any).ethereum;\n\nlet AppComponent;\n\nif (hasEthereumProvider) {\n  AppComponent = <App />;\n} else {\n  AppComponent = <NoEthereumProviderPage />;\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <AppWrapper appComponent={AppComponent} />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from \"react\";\nimport {\n  AppBar,\n  Button,\n  Slide,\n  Toolbar,\n  Typography,\n  useScrollTrigger,\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { InTextLink } from \"../InTextLink\";\nimport configs from \"../../configs\";\nimport Color from \"color\";\n\ninterface IProps {\n  version?: string;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  footerContainer: {\n    position: \"absolute\",\n    bottom: 0,\n    // opacity: \"0.5\",\n  },\n  bottomAppBar: {\n    // paddingTop: \"1em\",\n    // paddingBottom: \"1em\",\n    // borderTop: \"2px solid #363636\",\n    height: \"3em\",\n    bottom: 0,\n    top: \"auto\",\n    backgroundColor: Color(theme.palette.primary.main).fade(0.3).toString(),\n\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"flex-end\",\n    paddingRight: \"1em\",\n    paddingLeft: \"1em\",\n  },\n\n  appVersion: {\n    marginLeft: \"auto\",\n  },\n}));\n\nconst HideOnScroll = React.memo((props) => {\n  const { children } = props;\n\n  const trigger = useScrollTrigger();\n\n  console.log(trigger);\n\n  return (\n    <Slide appear={false} direction=\"up\" in={trigger}>\n      {children as any}\n    </Slide>\n  );\n});\n\n// DEV_NOTE : O.L : All of the centering (for the links) and margin (for the app version)\n//                  was done in a hacky manner, should fix it in the future.\nexport const Footer = React.memo<IProps>((props) => {\n  const classes = useStyles();\n  const { version } = props;\n\n  return (\n    <div className={classes.footerContainer}>\n      {/* TODO : This 'Toolbar' is here to keep space between content and footer, should make a better solution */}\n      <Toolbar />\n      {/*<HideOnScroll>*/}\n      <AppBar className={classes.bottomAppBar} position={\"fixed\"}>\n        {/*<Toolbar>*/}\n        <div\n          style={{\n            width: \"100%\",\n            display: \"flex\",\n            flexDirection: \"row\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n          }}\n        >\n          <div\n            style={{\n              marginRight: \"auto\",\n              marginLeft: \"auto\",\n              position: \"absolute\",\n            }}\n          >\n            <InTextLink\n              text={\"Terms of use\"}\n              href={configs.termsOfUseUrl}\n              style={{ paddingInlineEnd: \"1em\", justifySelf: \"center\" }}\n            />\n            <InTextLink\n              href={configs.privacyPolicyUrl}\n              text={\"Privacy Policy\"}\n            />\n          </div>\n\n          <div className={classes.appVersion}>\n            <Typography variant={\"caption\"}>version {version}</Typography>\n          </div>\n        </div>\n      </AppBar>\n      {/*</HideOnScroll>*/}\n    </div>\n  );\n});\n","import React, { useEffect, useMemo } from \"react\";\nimport { ContentContainer } from \"./components/structure/ContentContainer\";\nimport { Route, Switch } from \"react-router-dom\";\nimport {\n  useCryptoWalletIntegrationStore,\n  useOrbsAccountStore,\n} from \"./store/storeHooks\";\nimport { observer } from \"mobx-react\";\nimport { NoEthereumProviderSection } from \"./components/ethereumConnection/NoEthereumProviderSection\";\nimport { GuardiansRegisterOrEditPage } from \"./pages/GuardiandRegisterOrEdit/GuardianRegisterOrEditPage\";\nimport { Background } from \"./components/structure/Background\";\nimport { Header } from \"./components/structure/Header\";\nimport { CssBaseline } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Page } from \"./components/structure/Page\";\nimport { useSnackbar } from \"notistack\";\nimport { Footer } from \"./components/structure/Footer\";\nimport { useCryptoWalletConnectionService } from \"./services/servicesHooks\";\nimport { HEADER_HEIGHT_REM } from \"./theme/Theme\";\n\nconst useStyles = makeStyles(() => ({\n  app: {\n    // height: \"100%\",\n    // minHeight: `calc(100% - ${HEADER_HEIGHT_REM}rem)`,\n    minHeight: `100%`,\n    flex: 1,\n    backgroundColor: \"#06142e\",\n    backgroundRepeat: \"repeat-y\",\n    backgroundImage:\n      \"url(https://www.orbs.com/wp-content/uploads/2019/02/technology-background1.png)\",\n    backgroundAttachment: \"scroll\",\n    backgroundPosition: \"top center\",\n  },\n}));\n\nconst App = observer(() => {\n  const classes = useStyles();\n  const cryptoWalletIntegrationStore = useCryptoWalletIntegrationStore();\n  const cryptoWalletConnectionService = useCryptoWalletConnectionService();\n  const orbsAccountStore = useOrbsAccountStore();\n  const { enqueueSnackbar } = useSnackbar();\n\n  const isConnected = cryptoWalletIntegrationStore.isConnectedToWallet;\n\n  const appContent = useMemo(() => {\n    if (!isConnected) {\n      return (\n        <Page>\n          <NoEthereumProviderSection\n            walletConnectionPhase={\"connect\"}\n            actionFunction={() => cryptoWalletIntegrationStore.askToConnect()}\n            isMetaMaskProvider={\n              cryptoWalletConnectionService.isMetamaskInstalled\n            }\n          />\n        </Page>\n      );\n    } else {\n      return (\n        <Switch>\n          <Route path={\"/\"}>\n            <GuardiansRegisterOrEditPage />\n          </Route>\n        </Switch>\n      );\n    }\n  }, [\n    cryptoWalletConnectionService.isMetamaskInstalled,\n    cryptoWalletIntegrationStore,\n    isConnected,\n  ]);\n\n  // Alert about TX error if happened\n  const txHadError = orbsAccountStore.txHadError;\n  useEffect(() => {\n    if (txHadError) {\n      enqueueSnackbar(\"Error in Transaction\", {\n        variant: \"error\",\n        autoHideDuration: 7000,\n      });\n    }\n  }, [enqueueSnackbar, txHadError]);\n\n  // Alert about TX cancelation  if happened\n  const txCanceled = orbsAccountStore.txCanceled;\n  useEffect(() => {\n    if (txCanceled) {\n      enqueueSnackbar(\"Transaction canceled\", { variant: \"info\" });\n    }\n  }, [enqueueSnackbar, txCanceled]);\n\n  // TODO : O.L : Change background image to the orbs one.\n  return (\n    <>\n      <Header />\n      <main className={classes.app}>\n        {/*<Background />*/}\n        <ContentContainer id={\"appContainer\"}>{appContent}</ContentContainer>\n        <CssBaseline />\n      </main>\n      <Footer version={\"0.1\"} />\n    </>\n  );\n});\n\nexport default App;\n"],"sourceRoot":""}